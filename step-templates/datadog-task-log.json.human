{
    "Id": "e8550a62-3ed7-4200-b5c7-ba91cbda5e2a",
  "Name": "Datadog - Log Task",
  "Description": "Log details of a task to Datadog, including error detail.

**Configuration**: 

* In Datadog, add a [standard attribute](https://docs.datadoghq.com/logs/processing/attributes_naming_convention/#standard-attributes-and-aliasing) of `octopus.deployment.properties` to see and access JSON details of the task.  

* When using the step, set the [run condition](https://octopus.com/docs/projects/steps/conditions) of the step to `Always run` to ensure logs are sent for errors as well as successful tasks.",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "  
function Send-DatadogEvent (
    $datadog,
    [string] $text,
    [string] $level,
    $properties = @{},
    [string] $exception = $null,
    [switch] $template) {
    
    
    if (-not $level) {
        $level = 'Information'
    }

    if (@('Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal') -notcontains $level) {
        $level = 'Information'
    }


    $ddtags = \"project:$($properties.ProjectName),deploymentname:$($properties.DeploymentName),env:$($properties.EnvironmentName)\"
    if ($properties[\"TaskType\"] -eq \"Runbook\") {
        $ddtags += \",runbookname:$($properties.RunbookName),tasktype:runbook\"
    }
    else {
        $ddtags += \",tasktype:deployment\"    
    }

    $body = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\"
    $body.Add(\"ddsource\", \"Octopus Deploy\")
    $body.Add(\"ddtags\", $ddtags)
    $body.Add(\"service\", $DatadogServiceName)
    $body.Add(\"hostname\", \"https://octopus.the-crock.com/\")
    $body.Add(\"http.url\", \"$($properties[\"TaskLink\"])\")
    $body.Add(\"octopus.deployment.properties\", \"$($properties | ConvertTo-Json)\")

    if ($exception) {
        $body.Add(\"error.message\", \"$($properties[\"Error\"])\")
        $body.Add(\"error.stack\", \"$($exception)\")
    }
    
    $body.Add(\"level\", \"$($level)\")
  
    $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\"
    $headers.Add(\"Content-Type\", \"application/json\")
    $headers.Add(\"DD-APPLICATION-KEY\", \"$($DatadogApplicationKey)\")
    $headers.Add(\"DD-API-KEY\", \"$($DatadogApiKey)\")

    Invoke-RestMethod -Uri $DatadogUrl -Body $($body | ConvertTo-Json)  -ContentType \"application/json\" -Method POST -Headers $headers
}

function Set-ErrorDetails(){

    $octopusAPIHeader = @{ \"X-Octopus-ApiKey\" = $DatadogOctopusAPIKey }
    $taskDetailUri = \"$($OctopusParameters['Octopus.Web.ServerUri'])/api/tasks/$($OctopusParameters[\"Octopus.Task.Id\"])/details\"

    $taskDetails = Invoke-RestMethod -Method Get -Uri $taskDetailUri -Headers $octopusAPIHeader 
    $errorMessage = \"\";
    $errorFirstLine = \"\";
    $isFirstLine = $true;

    foreach ($activityLog in $taskDetails.ActivityLogs) {
        foreach ($activityLogChild1 in $activityLog.Children) {
            foreach ($activityLogChild2 in $activityLogChild1.Children) {
                foreach ($logElement in $activityLogChild2.LogElements) {
                    if ($logElement.Category -eq \"Error\") {
                        if ($isFirstLine -eq $true) {
                            $errorFirstLine = $logElement.MessageText;
                            $isFirstLine = $false;
                        }

                        $errorMessage += $logElement.MessageText + \" `n\"
                    }
                }
            }
        }
    }

    $exInfo = @{
        firstLine = $errorFirstLine
        message = $errorMessage
    }

    return $exInfo;
}

function Set-TaskProperties(){
    $taskProperties = @{
        ProjectName     = $OctopusParameters['Octopus.Project.Name'];
        Result          = \"succeeded\";
        InstanceUrl     = $OctopusParameters['Octopus.Web.ServerUri'];
        EnvironmentName = $OctopusParameters['Octopus.Environment.Name'];
        DeploymentName  = $OctopusParameters['Octopus.Deployment.Name'];
        TenantName      = $OctopusParameters[\"Octopus.Deployment.Tenant.Name\"]
        TaskLink        = $taskLink
    }
    
    if ([string]::IsNullOrEmpty($OctopusParameters[\"Octopus.Runbook.Id\"]) -eq $false) {
        $taskProperties[\"TaskType\"] \t\t\t= \"Runbook\"
        $taskProperties[\"RunbookSnapshotName\"] \t= $OctopusParameters[\"Octopus.RunbookSnapshot.Name\"]
        $taskProperties[\"RunbookName\"]         \t= $OctopusParameters[\"Octopus.Runbook.Name\"]
    }
    else {
        $taskProperties[\"TaskType\"] \t\t= \"Deployment\"
        $taskProperties[\"ReleaseNumber\"] \t= $OctopusParameters['Octopus.Release.Number'];
        $taskProperties[\"Channel\"]  \t\t= $OctopusParameters['Octopus.Release.Channel.Name'];
    }

    return $taskProperties;
}

#******************************************************************

$taskLink = $OctopusParameters['Octopus.Web.ServerUri'] + \"/app#/\" + $OctopusParameters[\"Octopus.Space.Id\"] + \"/tasks/\" + $OctopusParameters[\"Octopus.Task.Id\"]
$level = \"Information\"
$exception = $null

Write-Output \"Logging the deployment result to Datadog at $DatadogServerUrl...\"

$properties = Set-TaskProperties

if ($OctopusParameters['Octopus.Deployment.Error']) {
    $exceptionInfo = Set-ErrorDetails
    $properties[\"Result\"] = \"failed\"
    $properties[\"Error\"] = $exceptionInfo[\"firstLine\"]
    $exception = $exceptionInfo[\"message\"]
    $level = \"Error\"
}

try {
    Send-DatadogEvent $datadog \"A deployment of $($properties.ProjectName) release $($properties.ReleaseNumber) $($properties.Result) in $($properties.EnvironmentName)\" -level $level -template -properties $properties -exception $exception
}
catch [Exception] {
    Write-Error \"Unable to write task details to Datadog\"
    $_.Exception | format-list -force
}
"
  },
  "Parameters": [
    {
      "Id": "6a1f7310-294a-4593-898b-afc32bd93bb3",
      "Name": "DatadogUrl",
      "Label": "Datadog URL",
      "HelpText": "The URL for POSTing log information",
      "DefaultValue": "https://http-intake.logs.datadoghq.eu/v1/input",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "2eb26500-3ced-466c-962e-18b91ce6ea46",
      "Name": "DatadogAPIKey",
      "Label": "Datadog API Key",
      "HelpText": "[API Key](https://docs.datadoghq.com/account_management/api-app-keys/#api-keys) required for accessing API.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "289728cb-9442-41b3-a3be-17f4e8287380",
      "Name": "DatadogApplicationKey",
      "Label": "Datadog Application Key",
      "HelpText": "Information on Datadog [Application Keys](https://docs.datadoghq.com/account_management/api-app-keys/#application-keys)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "6afbdc2a-3f85-4807-abff-d7f3e0dcba77",
      "Name": "DatadogServiceName",
      "Label": "Datadog Service Name",
      "HelpText": null,
      "DefaultValue": "Octopus Deploy",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "62b47d15-e05f-4e0b-a4b9-4a80b98b62f9",
      "Name": "DatadogOctopusAPIKey",
      "Label": "",
      "HelpText": "Only used when an exception has occurred.

Octopus instance [API Key](https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key).   Requires at least `TaskView` [permission](https://octopus.com/docs/security/users-and-teams/system-and-space-permissions).",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2021-03-04T11:25:36.400Z",
    "OctopusVersion": "2020.5.249",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "octocrock",
  "Category": "datadog"
}
