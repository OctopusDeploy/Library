{
  "Id": "77331575-0628-455d-b484-cfd4703e2081",
  "Name": "Load WIF Issuer Thumbprint(s)",
  "Description": "Updates the web/app config files' WIF TrustedIssuer thumbprints based on a realtime metadata request.

Changes are made to the following section:
/configuration/system.identityModel/identityConfiguration/issuerNameRegistry/trustedIssuers",
  "ActionType": "Octopus.Script",
  "Version": 5,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "$FilePath          = \"#{FilePath}\"\r
$TrustedIssuerName = \"#{TrustedIssuerName}\"\r
$MetadataUri       = \"#{MetadataUri}\"\r
\r
\r
[void][System.Reflection.Assembly]::LoadWithPartialName(\"System.Xml.Linq\")\r
\r
# because Octo calls powershell steps in a stupid manor...\r
$charGT = [System.Text.Encoding]::ASCII.GetString( @(62) )\r
\r
function Get-Thumbprints($MetadataUri) {\r
    $MetadataTxt = Invoke-WebRequest -Uri $MetadataUri\r
    $MetadataXml = [xml]($MetadataTxt.Content)\r
    \r
    $outval = @()\r
    # new certs\r
    \r
    $MetadataXml.EntityDescriptor.IDPSSODescriptor.KeyDescriptor | ? { $_.use -eq \"signing\" } | % {\r
        $Cert_Bytes = [System.Convert]::FromBase64String( $_.KeyInfo.X509Data.X509Certificate )\r
        $Cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2( , $Cert_Bytes ) # powershell is stupid about arrays\r
        Write-Host \"Found certificate for [$($_.use)] : [$($cert.NotBefore.ToString(\"yyyyMMdd\")) - $($cert.NotAfter.ToString(\"yyyyMMdd\"))] : Thumbprint [$($Cert.Thumbprint)] for Subject [$($Cert.Subject)]\"\r
        $outval += $Cert.Thumbprint\r
    }\r
    return $outval\r
}\r
\r
function Get-TextIndex([string]$text, [int]$LineNumber = 0, [int]$LinePosition = 0) {\r
    # Ported from : https://github.com/futurist/src-location/blob/master/index.js  function locationToIndex\r
    # NOTE: diff from source to address bug. Test-GetTextIndex validates the changes.\r
    $strLF = [char]10 # \
\r
    $strCR = [char]13 # \\r\r
    $idx   = -1       # text index\r
    $lc    = 1        # Line Count\r
    for($i = 0; $lc -lt $LineNumber -and $i -lt $text.Length; $i++) {\r
        $idx++\r
        $c = $text[$i] # cur char\r
        if ($c -eq $strLF -or $c -eq $strCR) {\r
            $lc++\r
            if ($c -eq $strCR -and $text[$i + 1] -eq $strLF) { # DOS CRLF\r
                $i++\r
                $idx++\r
            }\r
        }\r
    }\r
    return $idx + $LinePosition\r
}\r
\r
function Replace-TrustedIssuerThumbprints($FilePath, $TrustedIssuerName, $Thumbprints) {\r
    # Load the file twice - once as text for manipulation, once as XML for xpath and positions\r
    $fileText      = [System.IO.File]::ReadAllText($FilePath)\r
    $fileXml       = [System.Xml.Linq.XDocument]::Load($FilePath, [System.Xml.Linq.LoadOptions]::SetLineInfo -bor [System.Xml.Linq.LoadOptions]::PreserveWhitespace )\r
    $IdpsXml       = $fileXml.Descendants(\"configuration\")[0].Descendants(\"system.identityModel\")[0].Descendants(\"identityConfiguration\")[0].Descendants(\"issuerNameRegistry\")[0].Descendants(\"trustedIssuers\")[0].Descendants(\"add\")\r
\r
    # Figure out which elements to manipulate... First delete from the bottom up, then replace the top-most element\r
    $IdpMatches    = $IdpsXml | ? { $_.Attribute(\"name\").Value -eq $TrustedIssuerName } | Sort-Object -Property LineNumber, LinePosition -Descending\r
    $IdpsToDelete  = $IdpMatches | Select-Object -First ($IdpMatches.Count - 1)\r
    $IdpsToReplace = $IdpMatches | Select-Object -Last 1\r
\r
    # Delete from the bottom up, so that the LineNumber/LinePosition remain valid during the manipulation\r
    foreach ($IdP in $IdpsToDelete) {\r
        Write-Host ( \"DEL [{0}:{1}] {2}\" -f $IdP.LineNumber, $IdP.LinePosition, $IdP.ToString() )\r
\r
        $fileIdxOpen  = Get-TextIndex -text $fileText -LineNumber $IdP.LineNumber -LinePosition ( $IdP.LinePosition - 1 )\r
        $fileIdxClose = $fileText.IndexOf($charGT, $fileIdxOpen) + 1 # add one to include the closing &gt;\r
        $fileSubstr   = $fileText.Substring($fileIdxOpen, $fileIdxClose - $fileIdxOpen)\r
        Write-Host ( \"    [$fileIdxOpen .. $fileIdxClose] : $fileSubstr\" )\r
\r
        $fileIdxPrior = $fileText.LastIndexOf($charGT, $fileIdxOpen) + 1\r
        $fileText     = $fileText.Remove($fileIdxPrior, $fileIdxClose - $fileIdxPrior)\r
    }\r
    # Replace the top-most element with each thumbprint\r
    foreach ($IdP in $IdpsToReplace) {\r
        Write-Host ( \"FIX [{0}:{1}] {2}\" -f $IdP.LineNumber, $IdP.LinePosition, $IdP.ToString() )\r
\r
        $fileIdxOpen  = Get-TextIndex -text $fileText -LineNumber $IdP.LineNumber -LinePosition ( $IdP.LinePosition - 1 )\r
        $fileIdxClose = $fileText.IndexOf($charGT, $fileIdxOpen) + 1 # add one to include the closing &gt;\r
        $fileSubstr   = $fileText.Substring($fileIdxOpen, $fileIdxClose - $fileIdxOpen)\r
        Write-Host ( \"    [$fileIdxOpen .. $fileIdxClose] : $fileSubstr\" )\r
\r
        $fileIdxPrior = $fileText.LastIndexOf($charGT, $fileIdxOpen) + 1\r
        $ElementDelim = $fileText.Substring($fileIdxPrior, $fileIdxOpen - $fileIdxPrior)\r
        Write-Host ( \"   -[{0} .. {1}]\" -f $fileIdxPrior, $fileIdxClose )\r
        $fileText     = $fileText.Remove($fileIdxPrior, $fileIdxClose - $fileIdxPrior)\r
        foreach ($Thumbprint in $Thumbprints) {\r
            $newAttribs = [System.Xml.Linq.XAttribute[]]@(\r
                                ( New-Object System.Xml.Linq.XAttribute(\"thumbprint\", $Thumbprint       ) ),\r
                                ( New-Object System.Xml.Linq.XAttribute(\"name\"      , $TrustedIssuerName) )\r
                            )\r
            $newValue = ( New-Object System.Xml.Linq.XElement(\"add\", $newAttribs) ).ToString()\r
            $fileText = $fileText.Insert($fileIdxPrior, $ElementDelim + $newValue)\r
        }\r
    }\r
    return $fileText\r
}\r
\r
\r
$ThumbPrints       = Get-Thumbprints -MetadataUri $MetadataUri\r
$fileContent       = Replace-TrustedIssuerThumbprints -FilePath $FilePath -TrustedIssuerName $TrustedIssuerName -Thumbprints $ThumbPrints\r
[System.IO.File]::WriteAllText($FilePath, $fileContent)\r
",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "9fa8d0c0-53a3-4d38-b183-bab04037869e",
      "Name": "FilePath",
      "Label": "web config file path",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "e97dcceb-fbf1-41f2-9829-e32c6322fe58",
      "Name": "TrustedIssuerName",
      "Label": "Trusted Issuer Name",
      "HelpText": "",
      "DefaultValue": "https://adfs/adfs/services/trust",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "9670671a-5d7e-4232-9d45-5fc47d005167",
      "Name": "MetadataUri",
      "Label": "Metadata Uri",
      "HelpText": null,
      "DefaultValue": "https://adfs/FederationMetadata/2007-06/FederationMetadata.xml",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
  "LastModifiedOn": "2018-06-07T19:59:41.925Z",
  "LastModifiedBy": "sbrickey",
  "Category": "XML",
  "$Meta": {
    "ExportedAt": "2018-06-07T19:59:41.925Z",
    "OctopusVersion": "3.17.2",
    "Type": "ActionTemplate"
  }
}
