{
  "Id": "1409c3dd-e87d-49f1-9b4f-382af800b75d",
  "Name": "Deploy SSAS from Package",
  "Description": "Deploys SSAS packages using Microsoft.AnalysisServices.Deployment.exe.",
  "ActionType": "Octopus.Script",
  "Version": 10,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'\r\n$regKeyFormat = 'HKLM:\\Software\\Wow6432Node\\Microsoft\\Microsoft SQL Server\\{0}0\\Tools\\ClientSetup\\'\r\n$vsVersions = @( '12' )\r\n\r\nfunction Validate-Argument($name, $value) {\r\n    if (!$value) {\r\n        throw ('Missing required value for parameter ''{0}''.' -f $name)\r\n    }\r\n    return $value\r\n}\r\n\r\n# Returns the Microsoft.AnalysisServices.Deployment.exe path\r\nfunction Load-SsasDeploy {\r\n  Write-Verbose 'Attempting to discover install folder...' \r\n  $regKey = $vsVersions | foreach { $regKeyFormat -f $_ } | where { Test-Path $_ } | select -first 1\r\n    \r\n  if (!$regKey) {\r\n    throw 'No usable SQL installation found.'\r\n  }\r\n\t\r\n  Write-Verbose 'SQL Server found. Attempting to discover DTS path...'\r\n  $dtsDir = Get-ItemProperty -Path $regKey | select -ExpandProperty SqlToolsPath\r\n  $exePath = $dtsDir + 'Microsoft.AnalysisServices.Deployment.exe'\r\n  if ( -not (Test-Path $exePath))\r\n  {\r\n      throw 'Missing: Cannot file Microsoft.AnalysisServices.Deployment.exe - ' + $exePath\r\n  }\r\n  Write-Verbose 'Microsoft.AnalysisServices.Deployment.exe found.'\r\n  return '\"'+$exePath+'\"'\r\n}\r\n\r\n# Update Deploy xml (.deploymenttargets)\r\nfunction Update-Deploy {\r\n\t[xml]$deployContent = Get-Content $file\r\n\t$deployContent.DeploymentTarget.Database = $ssasDatabase \r\n\t$deployContent.DeploymentTarget.Server = $ssasServer\r\n\t$deployContent.DeploymentTarget.ConnectionString = 'DataSource=' + $ssasServer + ';Timeout=0'\r\n\t$deployContent.Save($file)\r\n}\r\n# Update Config xml (.configsettings)\r\nfunction Update-Config {\r\n\t[xml]$configContent = Get-Content $file\r\n    $configContent.ConfigurationSettings.Database.DataSources.DataSource.ConnectionString = 'Provider=SQLNCLI11.1;Data Source=' + $dbServer + ';Integrated Security=SSPI;Initial Catalog=' + $dbDatabase\r\n\t$configContent.Save($file)\r\n}\r\n# Update Config xml (.deploymentoptions)\r\nfunction Update-Option {\r\n\t[xml]$optionContent = Get-Content $file\r\n    $optionContent.DeploymentOptions.ProcessingOption = 'DoNotProcess'\r\n\t$optionContent.Save($file)\r\n}\r\n\r\n# Get arguments\r\n$ssasPackageStepName = Validate-Argument 'SSAS Package Step Name' $OctopusParameters['SsasPackageStepName']\r\n$ssasServer = Validate-Argument 'SSAS server name' $OctopusParameters['SsasServer']\r\n$ssasDatabase = Validate-Argument 'SSAS database name' $OctopusParameters['SsasDatabase']\r\n$dbServer = Validate-Argument 'SSAS source server' $OctopusParameters['SrcServer']\r\n$dbDatabase = Validate-Argument 'SSAS source database' $OctopusParameters['SrcDatabase']\r\n\r\n# Set .NET CurrentDirectory to package installation path\r\n$installDirPathFormat = 'Octopus.Action[{0}].Output.Package.InstallationDirectoryPath' -f $ssasPackageStepName\r\n$installDirPath = $OctopusParameters[$installDirPathFormat]\r\n\r\n#$ssasServer     = 'server2\\md_dev'\r\n#$ssasDatabase   = 'BusinessIntelligence'\r\n#$dbServer       = 'server1\\dev'\r\n#$dbDatabase     = 'Warehouse'\r\n#$installDirPath = 'c:\\packages\\v1'\r\n\r\nWrite-Verbose ('Setting CurrentDirectory to ''{0}''' -f $installDirPath)\r\n[System.Environment]::CurrentDirectory = $installDirPath\r\n\r\n$exe = Load-SsasDeploy\r\n\r\n$files = Get-ChildItem â€“Path $installDirPath\\* -Include *.deploymenttargets\r\nforeach ($file in $files) {\r\n  $name = [IO.Path]::GetFileNameWithoutExtension($file)\r\n\r\n  Write-Host 'Updating' $file\r\n  Update-Deploy\r\n  $file = $installDirPath + '\\' + $name + '.configsettings'\r\n  Write-Host 'Updating' $file\r\n  Update-Config\r\n  $file = $installDirPath + '\\' + $name + '.deploymentoptions'\r\n  Write-Host 'Updating' $file\r\n  Update-Option\r\n\r\n  $arg = '\"' + $installDirPath + '\\' + $name + '.asdatabase\" /s:\"' + $installDirPath + '\\Log.txt\"'\r\n  Write-Host $exe $arg\r\n  $execute = [scriptblock]::create('& ' + $exe + ' ' + $arg)\r\n  Invoke-Command -ScriptBlock $execute\r\n}\r\n"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "SsasPackageStepName",
      "Label": null,
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      }
    },
    {
      "Name": "SsasServer",
      "Label": "Server",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "SsasDatabase",
      "Label": "Database",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "SrcServer",
      "Label": "Data Source - Server",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "SrcDatabase",
      "Label": "Data Source - Database",
      "HelpText": null,
      "DefaultValue": "Warehouse",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2016-01-13T10:12:52.410+00:00",
  "LastModifiedBy": "matt40k",
  "$Meta": {
    "ExportedAt": "2016-01-13T10:12:52.410+00:00",
    "OctopusVersion": "3.2.13",
    "Type": "ActionTemplate"
  },
  "Category": "sql"
}