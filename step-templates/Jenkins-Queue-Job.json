{
  "Id": "ccb7ad4c-a19e-426f-822e-cd0e0243bda3",
  "Name": "Jenkins - Queue Job",
  "Description": "Trigger a job in Jenkins",
  "ActionType": "Octopus.Script",
  "Version": 4,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "$jenkinsServer = $OctopusParameters['jqj_JenkinsServer'] \n$jenkinsUserName = $OctopusParameters['jqj_JenkinsUserName']\n$jenkinsUserPassword = $OctopusParameters['jqj_JenkinsUserPasword']\n$jobURL = $jenkinsServer + $OctopusParameters['jqj_JobUrl']\n$failBuild = [System.Convert]::ToBoolean($OctopusParameters['jqj_FailBuild'])\n$jobTimeout = $OctopusParameters['jqj_JobTimeout']\n$buildParam = $OctopusParameters['jqj_BuildParam']\n$checkIntervals = $OctopusParameters['jqj_checkInterval']\n\n$jobUrlWithParams = \"$jobURL$buildParam\"\n\nWrite-Host \"job url: \" $jobUrlWithParams \n\nfunction Get-JenkinsAuth\n{\n    $params = @{}\n    if ($jenkinsUserName -ne \"\") {\n        $securePwd = ConvertTo-SecureString $jenkinsUserPassword -AsPlainText -Force \n        $credential = New-Object System.Management.Automation.PSCredential ($jenkinsUserName, $securePwd) \n        $head = @{\"Authorization\" = \"Basic \" + [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($jenkinsUserName + \":\" + $jenkinsUserPassword ))}\n        $params = @{\n            Headers = $head;\n            Credential = $credential;\n            ContentType = \"text/plain\";\n        }\n    }\n\n    # If your Jenkins uses the \"Prevent Cross Site Request Forgery exploits\" security option (which it should), \n    # when you make a POST request, you have to send a CSRF protection token as an HTTP request header.\n    # https://wiki.jenkins.io/display/JENKINS/Remote+access+API\n    try {\n        $tokenUrl = $jenkinsServer + \"crumbIssuer/api/json?tree=crumbRequestField,crumb\"\n        $crumbResult = Invoke-WebRequest -Uri $tokenUrl -Method Get @params -UseBasicParsing | ConvertFrom-Json\n        Write-Host \"CSRF protection is enabled, adding CSRF token to request headers\"\n        $params.Headers += @{$crumbResult.crumbRequestField = $crumbResult.crumb}\n    } catch {\n        Write-Host $Error[0]\n    }\n    return $params\n}\n\ntry {\n    $authParams = Get-JenkinsAuth\n\n    Write-Host \"Start the build\"\n    $returned = Invoke-WebRequest -Uri $jobUrlWithParams  -Method Post -UseBasicParsing @authParams\n    Write-Host \"Job URL Link: $($returned.BaseResponse.Headers['Location'])\"\n    $jobResult = \"$($returned.BaseResponse.Headers['Location'])/api/json\"\n    $response = Invoke-RestMethod -Uri $jobResult -Method Get @authParams\n    $buildUrl = $Response.executable.url\n    while ($buildUrl -eq $null -or $buildUrl -eq \"\") {\n        $response = Invoke-RestMethod -Uri $jobResult -Method Get @authParams\n        $buildUrl = $Response.executable.url\n    }\n    Write-Host \"Build Number is: $($Response.executable.number)\"\n    Write-Host \"Job URL Is: $($buildUrl)\"\n    $buildResult = \"$buildUrl/api/json?tree=result,number,building\"\n        \n    $isBuilding = \"True\"\n    $i = 0\n    Write-Host \"Estimate Job Duration: \" $jobTimeout\n    while ($isBuilding -eq \"True\" -and $i -lt $jobTimeout) {       \n        $i += 5\n        Write-Host \"waiting $checkIntervals secs for build to complete\"\n        Start-Sleep -s $checkIntervals\n        $retyJobStatus = Invoke-RestMethod -Uri $buildResult -Method Get @authParams\n\n        $isBuilding = $retyJobStatus[0].building\n        $result = $retyJobStatus[0].result\n        $buildNumber = $retyJobStatus[0].number\n        Write-Host \"Retry Job Status: \" $result \" BuildNumber: \"  $buildNumber  \" IsBuilding: \"  $isBuilding \n    }\n    if ($failBuild) {\n        if ($result -ne \"SUCCESS\") {\n            Write-Host \"BUILD FAILURE: build is unsuccessful or status could not be obtained.\"\n            exit 1\n        }\n    }\n}\ncatch {\n    Write-Host \"Exception in jenkins job: $($_.Exception.Message)\"\n    exit 1\n}"
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "b8337514-3989-4b33-930c-b5ebde5b4be0",
      "Name": "jqj_JobUrl",
      "Label": "Job Url",
      "HelpText": "e.g. job/jobname/build",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "a52f7318-6f45-4e9f-b825-b3ae767608f8",
      "Name": "jqj_FailBuild",
      "Label": "Fail Build",
      "HelpText": "Should this fail the deployment?",
      "DefaultValue": "false",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      },
      "Links": {}
    },
    {
      "Id": "a59c57d3-0177-470c-80e0-f103e57f30d3",
      "Name": "jqj_JobTimeout",
      "Label": "Timeout Duration(secs)",
      "HelpText": "e.g. 60. Specify in secs how long to check for the job status before timing out.",
      "DefaultValue": "0",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "70e9cf06-3712-4950-a174-a5c5c7bd5858",
      "Name": "jqj_BuildParam",
      "Label": "Build Param",
      "HelpText": "e.g. ?Param=Value or ?delay=10sec",
      "DefaultValue": "/build",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "da8cdc0a-3cd8-4b34-9e5d-13245f77002c",
      "Name": "jqj_JenkinsServer",
      "Label": "Jenkins Server",
      "HelpText": null,
      "DefaultValue": "http://jenkins:8080/",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "1e43a971-d6a2-4692-8dd2-d8b5344b706c",
      "Name": "jqj_JenkinsUserName",
      "Label": "Jenkins User Name",
      "HelpText": "(Optional) User name  to use to connect to the Jenkins Server",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "fba79fa0-9221-4cd1-9259-5d59e716f0db",
      "Name": "jqj_JenkinsUserPasword",
      "Label": "Jenkins User Password",
      "HelpText": "(Optional) The password to use to connect to the Jenkins Server",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      },
      "Links": {}
    },
    {
      "Id": "9fea70e1-ff39-4cc1-8937-7cc19b959e17",
      "Name": "jqj_checkInterval",
      "Label": "Check Interval",
      "HelpText": "The sleep time between checking if the job is running in seconds",
      "DefaultValue": "20",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
  "LastModifiedOn": "2019-06-27T23:47:26.626Z",
  "LastModifiedBy": "sgalceranz",
  "$Meta": {
    "ExportedAt": "2019-06-27T23:47:26.626Z",
    "OctopusVersion": "2019.3.3",
    "Type": "ActionTemplate"
  },
  "Category": "jenkins"
}