{
  "Id": "ActionTemplates-42",
  "Name": "RavenDB â€“ Backup database to another existing database",
  "Description": "Back up one Raven database into another Raven database without creating a .dump file on the server.",
  "ActionType": "Octopus.Script",
  "Version": 3,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "#Location of the Raven Smuggler exe\r\n$ravenSmugglerPath = $OctopusParameters[\"ravenDBSmugglerPath\"]\r\n\r\n#URL address of RavenDB that is being backed up \r\n$fromRavenDbURL = $OctopusParameters[\"ravenDBUrlFrom\"]\r\n\r\n#URL address of destination RavenDB \r\n$toRavenDbURL = $OctopusParameters[\"ravenDBUrlTo\"]\r\n\r\n#name of the RavenDB that is being backed up\r\n$fromRavenDBName = $OctopusParameters[\"ravenDBNameFrom\"]\r\n\r\n#Name of the destination RavenDB\r\n$toRavenDBName = $OctopusParameters[\"ravenDBNameTo\"]\r\n\r\n#RavenDB API Key\r\n$ravenDBApiKey = $OctopusParameters[\"APIKeyRavenDB\"]\r\n\r\n\r\n#--------------------------------------------------------------------\r\n\r\n#Check path to smuggler\r\nWrite-Output \"Checking if Smuggler path is correct`n\"\r\n\r\n$smuggler_Exists = Test-Path -Path $ravenSmugglerPath\r\n\r\n\r\n\r\n#if the path is correct, the script continues, throws an error if the path is wrong\r\nIf($smuggler_Exists -eq $TRUE)\r\n{\r\n    Write-Output \"Smuggler exists\"\r\n\r\n}#ends if smuggler exists \r\nelse\r\n{\r\n    Write-Warning \"Smuggler can not be found `nCheck the directory: $ravenSmugglerPath\"\r\n    #Exit 1\r\n}#ends else, smuggler can't be found\r\n\r\nWrite-Output \"`n-------------------------`n\"\r\n\r\n\r\n\r\n#--------------------------------------------------------------------\r\n\r\n#Check if Source database exists\r\nWrite-Output \"Checking if $fromRavenDBName exists`n\"\r\n\r\n$sourceDB_exists = doesRavenDBExist -DBChecking $fromRavenDBName -URL $fromRavenDbURL \r\n\r\n\r\n#Checks if destination database exists\r\nWrite-Output \"Checking if $toRavenDBName exists`n\"\r\n\r\n$DestinationDB_Exist = doesRavenDBExist -DBChecking $toRavenDBName -URL $toRavenDbURL\r\n\r\n\r\n#if both database exists a back up occurs\r\nif(($sourceDB_exists -eq $TRUE) -and ($DestinationDB_Exist -eq $TRUE))\r\n{\r\n\r\n    Write-Output \"Both $fromRavenDBName and $toRavenDBName exist`n\"\r\n\r\n}#ends if \r\n#if the source database doesn't exist a error is throw\r\nelseIf(($sourceDB_exists -eq $FALSE) -and ($DestinationDB_Exist -eq $TRUE))\r\n{\r\n\r\n    Write-Warning \"$fromRavenDBName does not exist.\"\r\n    Write-Warning \"Make sure the database exists before continuing\"\r\n    #Exit 1\r\n\r\n}\r\n#if the destination database doesn't exist a error is throw\r\nelseIf(($DestinationDB_Exist -eq $FALSE) -and ($sourceDB_exists -eq $TRUE))\r\n{\r\n\r\n    Write-Warning \"$toRavenDBName does not exist.\"\r\n    Write-Warning \"Make sure the database exists before continuing\"\r\n    #Exit 1\r\n\r\n}#ends destination db not exists\r\nelse\r\n{\r\n\r\n    Write-Warning \"Neither $fromRavenDBName or $toRavenDBName exists\"\r\n    Write-Warning \"Make sure both databases exists\"\r\n    #Exit 1\r\n\r\n}#ends else\r\n\r\nWrite-Output \"`n-------------------------`n\"\r\n\r\n\r\n\r\n#--------------------------------------------------------------------\r\n#backing up source database into the destination database\r\n\r\ntry\r\n{\r\n    Write-Output \"Attemping Backup up now\"\r\n    Write-Output \"`n-------------------------`n\"\r\n    & $ravenSmugglerPath between $fromRavenDbURL $toRavenDbURL --database:$fromRavenDBName --database2:$toRavenDBName --api-key:$ravenDBApiKey\r\n    Write-Output \"`n-------------------------`n\"\r\n    Write-Output \"Backup successful\" \r\n}#ends try\r\ncatch\r\n{\r\n    Write-Warning \"An error occurred during backup, please try again\"\r\n    Exit 1\r\n}#ends catch\r\n    \r\n   \r\n\r\n\r\n#--------------------------------------------------------------------\r\n\r\n#checks to see if the entered database exists, return a boolean value depending on the outcome\r\nfunction doesRavenDBExist([string] $DBChecking, [string]$URL)\r\n{\r\n    #retrieves the list of databases at the specified URL\r\n    $database_list = Invoke-RestMethod -Uri \"$fromRavenDbURL/databases\" -Method Get\r\n    #checks if the database is at the specified URL\r\n    if ($database_list -contains $DBChecking.ToString()) \r\n    {\r\n        return $TRUE\r\n    }\r\n    else \r\n    {\r\n        return $FALSE\r\n    }\r\n\r\n    \r\n}#ends does ravenDB exist function\r\n\r\n"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "ravenDBSmugglerPath",
      "Label": "Raven Smuggler Path",
      "HelpText": "Path to the Raven.Smuggler.exe",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "ravenDBUrlFrom",
      "Label": "Source Database URL",
      "HelpText": "The URL address of the Raven database, where the Source Database is located. For example http://localhost:8080/",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "ravenDBUrlTo",
      "Label": "Destination Database URL",
      "HelpText": "The URL address of the Raven database, where the destination database is located. For example http://localhost:8080/",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "ravenDBNameFrom",
      "Label": "Name of Source Database",
      "HelpText": "Name of the source Database in Raven",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "ravenDBNameTo",
      "Label": "Name of the destination Database",
      "HelpText": "Name of the destination database in Raven",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "APIKeyRavenDB",
      "Label": "Raven API Key",
      "HelpText": "API Key needed to access the Raven Database",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2015-09-22T04:53:31.761Z",
  "LastModifiedBy":"timhunt303",
  "$Meta": {
    "ExportedAt": "2015-09-22T04:53:31.761Z",
    "OctopusVersion": "3.0.21.0",
    "Type": "ActionTemplate"
  }
}
