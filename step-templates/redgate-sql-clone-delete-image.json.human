{
  "Id": "5ba6d0f2-04f1-4b52-adbf-9cf23b12ee58",
  "Name": "Redgate - SQL Clone, Delete Image",
  "Description": "Deletes a database image with [Redgate SQL Clone](https://www.red-gate.com/products/dba/sql-clone/index).

Requires SQL Clone.

*Version date: 16th May 2019*",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties":  {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'

# The code for this step template is largely a copy/paste job from the
# Azure DevOps Services step template which is maintained by Redgate:
# https://github.com/red-gate/SqlCloneVSTSExtension/blob/master/DeleteImageTask/SQLCloneDeleteImageTask.ps1
# The code was copied and adapted on 16th May 2019.

Write-Verbose \"cloneServer is $cloneServer\"
Write-Verbose \"cloneUser is $cloneUser\"
Write-Verbose \"clonePassword is $clonePassword\"
Write-Verbose \"imageName is $imageName\"

# This line is broken: Import-Module \"$PSScriptRoot\\Modules\\RedGate.SQLClone.PowerShell.dll\"

if($cloneUser){
    $password = ConvertTo-SecureString -String $clonePassword -AsPlainText -Force
    $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $cloneUser,$password

}
Connect-SqlClone -ServerUrl $cloneServer -Credential $credential
Write-Output \"Connected to SQL Clone server\"
        
        try
        {
            $image = Get-SqlCloneImage -Name $imageName
            Write-Output \"Found image\"
        }
        catch
        {
            $images = Get-SqlCloneImage
            $imageNames = \"`n\"
            Foreach ($cImage in $images)
            {
                $imageNames += $cImage.Name + \"`n\"
            }
            $message = 'SQL Clone image ' + $imageName + ' does not exist, available images: ' + $imageNames
            write-error $message
            exit 1
        }
        
        Write-Output \"Deleting image\"
        Remove-SqlCloneImage -Image $image | Wait-SqlCloneOperation
        Write-Output \"Finished deleting image\"     

Write-Debug \"Leaving script SQLCloneDeleteImageTask.ps1\"
"
  },
  "Parameters": [
    {
      "Id": "8c140a4c-65a2-4341-a604-73d14775b3a0",
      "Name": "cloneServer",
      "Label": "SQL Clone Server (required)",
      "HelpText": "The URL for your SQL Clone server (e.g. http://sql-clone.example.com:14145)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "e5ac1d04-b8a5-440e-ba69-a5d66a53abba",
      "Name": "cloneUser",
      "Label": "SQL Clone User (optional)",
      "HelpText": "User account to access SQL Clone. (If left blank Octopus tentacle account will be used.)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "5f6288f2-57c9-4a11-91f2-b0c2e3cb9ccd",
      "Name": "clonePassword",
      "Label": "SQL Clone Password (optional)",
      "HelpText": "User account to access SQL Clone. (If left blank Octopus tentacle account will be used.)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "ee5286d3-f233-410c-92ab-36743f8743e7",
      "Name": "imageName",
      "Label": "Image Name (required)",
      "HelpText": "The name of your database image.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2019-05-16T11:37:47.360Z",
  "LastModifiedBy": "alex-yates",
  "$Meta": {
    "ExportedAt": "2019-05-16T11:37:47.360Z",
    "OctopusVersion": "2019.2.7",
    "Type": "ActionTemplate"
  },
  "Category": "redgate"
}
