{
  "Id": "581e7211-c9e2-4d7b-8934-bcdac421d022",
  "Name": "Create Tenant",
  "Description": "Create an Octopus [tenant](https://octopus.com/docs/deployment-patterns/multi-tenant-deployments) with optional tenant tags and project connections.",
  "ActionType": "Octopus.Script",
  "Version": 4,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$securityProtocol = [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12
[Net.ServicePointManager]::SecurityProtocol = $securityProtocol

$ErrorActionPreference = 'Stop'

$octopusBaseUrl = $CloneTenantStep_OctopusUrl.Trim('/')
$apiKey = $CreateTenantStep_ApiKey
$tenantName = $CreateTenantStep_TenantName
$tenantTags = if ($CreateTenantStep_TenantTags -eq $null) { @() } else { $CreateTenantStep_TenantTags | ConvertFrom-Json }
$projectEnvironments = if ($CreateTenantStep_ProjectEnvironments -eq $null) { @{} } else { $CreateTenantStep_ProjectEnvironments | ConvertFrom-Json }
$spaceId = $CloneTenantStep_SpaceId

if ([string]::IsNullOrWhiteSpace($octopusBaseUrl)) {
    throw \"The step parameter 'Octopus Base Url' was not found. This step requires the Octopus Server URL to function, please provide one and try again.\"
}

if ([string]::IsNullOrWhiteSpace($apiKey)) {
    throw \"The step parameter 'Octopus API Key' was not found. This step requires an API Key to function, please provide one and try again.\"
}

if ([string]::IsNullOrWhiteSpace($tenantName)) {
    throw \"The step parameter 'Tenant Name' was not found. Please provide one and try again.\"
}

function Invoke-OctopusApi {
    param(
        [Parameter(Position = 0, Mandatory)]$Uri,
        [ValidateSet(\"Get\", \"Post\", \"Put\", \"Delete\")]$Method = 'Get',
        $Body
    )
    
    $uriParts = @($octopusBaseUrl, $Uri.TrimStart('/'))    
    $uri = ($uriParts -join '/')
    
    Write-Verbose \"Uri: $uri\"
    
    $requestParameters = @{
        Uri = $uri
        Method = $Method
        Headers = @{ \"X-Octopus-ApiKey\" = $apiKey }
        UseBasicParsing = $true
    }
    
    if ($null -ne $Body) { $requestParameters.Add('Body', ($Body | ConvertTo-Json -Depth 10)) }
    
    return Invoke-WebRequest @requestParameters | % Content | ConvertFrom-Json
}

function Test-SpacesApi {
\tWrite-Verbose \"Checking API compatibility\";
\t$rootDocument = Invoke-OctopusApi 'api/';
    if($rootDocument.Links -ne $null -and $rootDocument.Links.Spaces -ne $null) {
    \tWrite-Verbose \"Spaces API found\"
    \treturn $true;
    }
    Write-Verbose \"Pre-spaces API found\"
    return $false;
}

if([string]::IsNullOrWhiteSpace($spaceId)) {
\tif(Test-SpacesApi) {
      \t$spaceId = $OctopusParameters['Octopus.Space.Id'];
      \tif([string]::IsNullOrWhiteSpace($spaceId)) {
          \tthrow \"This step needs to be run in a context that provides a value for the 'Octopus.Space.Id' system variable. In this case, we received a blank value, which isn't expected - please reach out to our support team at https://help.octopus.com if you encounter this error or try providing the Space Id parameter.\";
      \t}
\t}
}

$apiPrefix = \"api/\"
$tenantUrlBase = @($octopusBaseUrl, 'app#')

if ($spaceId) {
\tWrite-Host \"Using Space $spaceId\"
\t$apiPrefix += $spaceId
    $tenantUrlBase += $spaceId
}

$body = @{
\tId = $null
    Name = $tenantName
    TenantTags = @($tenantTags)
    ProjectEnvironments = $projectEnvironments
}

Write-Host \"Creating tenant $tenantName\"
$tenant = Invoke-OctopusApi \"$apiPrefix/tenants\" -Method Post -Body $body
$tenantUrl = ($tenantUrlBase + \"tenants\" + $tenant.Id + \"overview\") -join '/'

Write-Highlight \"New tenant [$tenantName]($tenantUrl) has been created.\""
  },
  "Parameters": [
    {
      "Id": "9c6ce5ed-e370-4150-88c0-880984531a48",
      "Name": "CloneTenantStep_OctopusUrl",
      "Label": "Octopus URL",
      "HelpText": "The URL of the Octopus Server to create the tenant on.",
      "DefaultValue": "#{if Octopus.Web.ServerUri}#{Octopus.Web.ServerUri}#{else}#{Octopus.Web.BaseUrl}#{/if}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "a57b379b-a0dd-4d0e-8229-7bd358448766",
      "Name": "CreateTenantStep_ApiKey",
      "Label": "Octopus API Key",
      "HelpText": "The Octopus API Key to use for the API requests",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "e02927d1-e2a3-4887-b5d3-c49b12a297a2",
      "Name": "CreateTenantStep_TenantName",
      "Label": "Tenant Name",
      "HelpText": "The name of the tenant to create. *Note this must be unique*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "3c3364b8-69f9-458f-9b34-efc591c8882e",
      "Name": "CreateTenantStep_TenantTags",
      "Label": "Tenant Tags JSON",
      "HelpText": "The tenant tags in a JSON array format. Example below.

*[\"TagSet1/Tag1\", \"TagSet2/Tag1\", \"TagSet2/Tag2\"]*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "a68945f1-7adc-4015-80da-dc3a3ce0b571",
      "Name": "CreateTenantStep_ProjectEnvironments",
      "Label": "Project and Environments JSON",
      "HelpText": "The projects and environments to connect the tenant to in JSON format. Example below.

*{ \"Projects-1\": [\"Environments-1\", \"Environments-2\"], \"Projects-2\": [\"Environments-1\", \"Environments-2\", \"Environments-3\"] }*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "5f80b46a-d09c-4092-8a0f-fcc96c49fde2",
      "Name": "CloneTenantStep_SpaceId",
      "Label": "Space Id",
      "HelpText": "The Id of the Space used to clone the tenant. **Leave blank if you are using an Octopus version earlier than 2019.1 or if you wish to use the Octopus.Space.Id variable value.**",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2021-08-23T12:40:10.975Z",
    "OctopusVersion": "2021.1.7687",
    "Type": "ActionTemplate"
  },
  "Category": "octopus",
  "LastModifiedBy": "benjimac93"
}
