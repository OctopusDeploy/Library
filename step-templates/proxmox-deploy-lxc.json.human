{
	"Id": "ab90cb93-96ae-4841-8058-1cc5ec6feebe",
	"Name": "Proxmox Deploy LXC Container",
	"Description": "Creates a new Proxmox LXC container using the Proxmox API.

Requires a Proxmox [API token](https://pve.proxmox.com/wiki/Proxmox_VE_API#API_Tokens) to authenticate to the Proxmox Server/Cluster",
	"ActionType": "Octopus.Script",
	"Version": 3,
	"CommunityActionTemplateId": null,
	"Packages": [],
	"Properties": {
	  "Octopus.Action.Script.ScriptSource": "Inline",
	  "Octopus.Action.Script.Syntax": "PowerShell",
	  "Octopus.Action.Script.ScriptBody": "# Proxmox Connection Variables
$ProxmoxHost = $OctopusParameters[\"Proxmox.Host\"];
$ProxmoxPort = [int]$OctopusParameters[\"Proxmox.Port\"];
$ProxmoxUser = $OctopusParameters[\"Proxmox.User\"];

$ProxmoxNode = $OctopusParameters[\"Proxmox.Node\"];

$ProxmoxTokenID = $OctopusParameters[\"Proxmox.TokenID\"];
$ProxmoxToken = $OctopusParameters[\"Proxmox.Token\"];

# LXC Variables
$LXC_VMID = [int]$OctopusParameters[\"Proxmox.LXC.VMID\"];
$LXC_Hostname = $OctopusParameters[\"Proxmox.LXC.Hostname\"];
$LXC_OSTemplate = $OctopusParameters[\"Proxmox.LXC.OSTemplate\"];
$LXC_Storage = $OctopusParameters[\"Proxmox.LXC.Storage\"];
$LXC_CPU = [int]$OctopusParameters[\"Proxmox.LXC.Cores\"];
$LXC_Memory = [int]$OctopusParameters[\"Proxmox.LXC.Memory\"];
$LXC_RootSize = [int]$OctopusParameters[\"Proxmox.LXC.RootSize\"];
$LXC_Networks = $OctopusParameters[\"Proxmox.LXC.Network\"];
$LXC_Password = $OctopusParameters[\"Proxmox.LXC.Password\"];

$BaseURL = \"https://$($ProxmoxHost):$($ProxmoxPort)/api2/json\"

$header = @{
\t\"Authorization\" = \"PVEAPIToken=$($ProxmoxUser)!$($ProxmoxTokenID)=$($ProxmoxToken)\"
}


Write-Host \"Testing Connection To Proxmox Server/Cluster ...\"

try{
\tInvoke-RestMethod -Method GET -uri \"$($BaseURL)\" -Headers $header | out-null
}catch{
\tthrow \"Couldn't Connect to the Proxmox Server/Cluster\"
}

Write-Host \"Successfully Connected To Proxmox Server/Cluster\"

$LXC_Start = 0
try {
  $Start = [System.Convert]::ToBoolean($OctopusParameters[\"Proxmox.LXC.StartOnCreate\"])
  
  if($Start -eq $True){
  \t$LXC_Start = 1
  }
  
} catch {}

$LXC_Force = 0
try {
  $Force = [System.Convert]::ToBoolean($OctopusParameters[\"Proxmox.LXC.Force\"])
  
  if($Force -eq $True){
  \t$LXC_Force = 1
  }
  
} catch {}

if($LXC_CPU -lt 1){
\t$LXC_CPU=1;
}

if($LXC_Memory -lt 16){
\t$LXC_Memory = 16;
}

if($LXC_RootSize -lt 1){
\t$LXC_RootSize = 1;
}

if($LXC_Hostname -eq $null -or $LXC_Hostname -eq \"\"){
\tthrow \"LXC Hostname must be provided!\"
}

if($LXC_OSTemplate -eq $null -or $LXC_OSTemplate -eq \"\"){
\tthrow \"LXC OS Template must be provided!\"
}

if($LXC_Storage -eq $null -or $LXC_Storage -eq \"\"){
\tthrow \"LXC Storage must be provided!\"
}

if($LXC_Networks -eq $null){
\tthrow \"You must provide at least one network property\"
}

if($LXC_Password -eq $null -or $LXC_Password -eq \"\"){
\tthrow \"LXC Password must be provided!\"
}

if($LXC_VMID -eq \"-1\"){
\t$LXC_VMID=(Invoke-RestMethod -Method GET -uri \"$($BaseURL)/cluster/nextid\" -headers $header).data
    Write-Host \"Found next vm id: $($LXC_VMID)\"
}

if($LXC_VMID -lt 1){
\tthrow \"The LXC VMID was not valid ($LXC_VMID), Set this to -1 to automatically find the next id\"
}

$LXCData = @{
\t\"vmid\" = $LXC_VMID
    \"hostname\" = $LXC_Hostname
    \"ostemplate\" = $LXC_OSTemplate
    \"rootfs\" = \"volume=$($LXC_Storage):$($LXC_RootSize)\"
    \"cores\" = $LXC_CPU
    \"memory\" = $LXC_Memory
    \"storage\" = $LXC_Storage
    \"password\" = $LXC_Password
    \"start\" = $LXC_Start
    \"force\" = $LXC_Force
}

$NetworkIndex = 0;

$Networks = $LXC_Networks.replace(\"\
\", \"`n\").split(\"`n\")

if($Networks.Count -lt 1){
\tthrow \"You must provide at least one network property\"
}

foreach ($network in $Networks){
    $LXCData[\"net$($NetworkIndex)\"] = $network;
    $NetworkIndex++;
}

$existingLXC = $null;

try{
    $existingLXC = Invoke-RestMethod -Method GET -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc/$($LXCData.vmid)\" -Headers $header
}catch{}

if($existingLXC -ne $null -and $LXCData.force -eq 0){
    throw \"LXC with VMID: $($LXCData.vmid) already exists. Use Force parameter to overwrite this LXC.\"

}elseif($existingLXC -ne $null -and $LXCData.force -eq 1){

    Write-host \"Deleting existing LXC with VMID: $($LXCData.vmid)\"
    $LXCDestroyAsyncTask =Invoke-RestMethod -Method DELETE -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc/$($LXCData.vmid)\" -Headers $header

    $count = 1;
    $maxCount = 10;
    $TaskID = $LXCDestroyAsyncTask.Data;

    DO
    {
        Write-Host \"Checking if LXC has finished Deleting..\"
        $LXCDestroyAsyncTaskStatus = (Invoke-RestMethod -Method GET -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/tasks/$($TaskID)/status\" -Headers $header).data
    
        if($LXCDestroyAsyncTaskStatus.status -eq \"stopped\"){
    \t    if($LXCDestroyAsyncTaskStatus.exitstatus -ne \"OK\"){
        \t    Write-Error \"LXC destroy task finished with error: $($LXCDestroyAsyncTaskStatus.exitstatus)\"
            }else{
        \t    Write-Host \"LXC destroy task has successfully completed!\"
            }
        
            break;
        }
    
\t    Write-Host \"LXC destroy task has not finished yet, retrying in 5 seconds..\"
        Write-Host \"Task Status: $($LXCDestroyAsyncTaskStatus.status)\"
        sleep 5
    
        If($count -gt $maxCount) {
          Write-Warning \"Task Timed out!\"
          break;
        }
        $count++

    } While ($count -le $maxCount)
}

Write-Host \"\"

Write-Host \"New LXC Summary:\"

$LXCData | Convertto-json -depth 10

$LXCCreateAsyncTask = (Invoke-RestMethod -Method POST -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc\" -Headers $header -Body $LXCData)


$count = 1;
$maxCount = 10;

Write-Host \"\"

DO
{
 
 $TaskID = $LXCCreateAsyncTask.Data;
    Write-Host \"Checking if LXC has finished creating..\"
    $LXCCreateAsyncTaskStatus = (Invoke-RestMethod -Method GET -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/tasks/$($TaskID)/status\" -Headers $header).data
    
    if($LXCCreateAsyncTaskStatus.status -eq \"stopped\"){
    \tif($LXCCreateAsyncTaskStatus.exitstatus -ne \"OK\"){
        \tWrite-Error \"LXC create task finished with error: $($LXCCreateAsyncTaskStatus.exitstatus)\"
        }else{
        \tWrite-Host \"LXC create task has successfully completed!\"
        }
        
        break;
    }
    
\tWrite-Host \"LXC create task has not finished yet, retrying in 5 seconds..\"
    Write-Host \"Task Status: $($LXCCreateAsyncTaskStatus.status)\"
    sleep 5
    
    If($count -gt $maxCount) {
      Write-Warning \"Task Timed out!\"
      break;
    }
    $count++

} While ($count -le $maxCount)
"
	},
	"Parameters": [
	  {
		"Id": "c75c69c5-bdfb-4cbf-8b5a-aeb6ef93c274",
		"Name": "Proxmox.Host",
		"Label": "Proxmox Host",
		"HelpText": "The hostname or IP address of the Proxmox cluster/host",
		"DefaultValue": "1.2.3.4",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "eddd73e2-cb63-4c1b-8100-05e8e9586180",
		"Name": "Proxmox.Port",
		"Label": "Proxmox Port",
		"HelpText": "Port number for Proxmox Cluster/Host",
		"DefaultValue": "8006",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "eae18957-8977-4f51-8e09-2402453fd531",
		"Name": "Proxmox.User",
		"Label": "Proxmox User Account",
		"HelpText": "The Proxmox user account associated with the api token.",
		"DefaultValue": "root@pam",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "b413ee30-ba94-4ff3-8b4e-148c1fbc52f6",
		"Name": "Proxmox.Node",
		"Label": "Proxmox Node",
		"HelpText": "The Proxmox node in the cluster.",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "3f70fe63-2b55-44f5-af8e-27d8717ade20",
		"Name": "Proxmox.TokenID",
		"Label": "Proxmox Token ID",
		"HelpText": "This is token id that was used to create an API token in proxmox.",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "741c3b80-af85-47c6-b49e-36aea9b2bc9a",
		"Name": "Proxmox.Token",
		"Label": "Proxmox API Token",
		"HelpText": "The API Token secret key",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "Sensitive"
		}
	  },
	  {
		"Id": "003db066-99a7-4d4c-a794-7a6310c2c86b",
		"Name": "Proxmox.LXC.VMID",
		"Label": "LXC VM ID",
		"HelpText": "The new VMID for the new LXC container default is -1 to find the next ID",
		"DefaultValue": "-1",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "63ba1450-8c9e-4d06-bedf-00389a63ef3f",
		"Name": "Proxmox.LXC.Hostname",
		"Label": "LXC Hostname",
		"HelpText": "The new LXC hostname",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "0a13d075-3a2f-4718-9793-f9b2f5963455",
		"Name": "Proxmox.LXC.OSTemplate",
		"Label": "LXC OS Template",
		"HelpText": "The template image or backup image for the LXC",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "55f7937b-4a5f-49bb-b129-f589c3ce51cc",
		"Name": "Proxmox.LXC.Password",
		"Label": "LXC Root Password",
		"HelpText": "This will be the root password once the LXC container has been created",
		"DefaultValue": "",
		"DisplaySettings": {
		  "Octopus.ControlType": "Sensitive"
		}
	  },
	  {
		"Id": "671751a5-d213-445a-a73f-dd9f1f33d754",
		"Name": "Proxmox.LXC.Storage",
		"Label": "LXC Storage",
		"HelpText": "Where the rootfs for this LXC will be stored.",
		"DefaultValue": "local",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "e796b021-0c31-4e03-8825-23c19cbf8876",
		"Name": "Proxmox.LXC.Network",
		"Label": "LXC Networks",
		"HelpText": "The list of network connections this LXC has. Each network connection on a new line.


`name=<name>,bridge=<bridge>,firewall=<0|1>,gw=<IPv4>,ip=<IPv4/CIDR|dhcp|manual>`


More Info: [https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/lxc](https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/lxc)",
		"DefaultValue": "name=eth0,bridge=vmbr0",
		"DisplaySettings": {
		  "Octopus.ControlType": "MultiLineText"
		}
	  },
	  {
		"Id": "c9e865ea-a7b2-42d3-aca6-8772e54b893a",
		"Name": "Proxmox.LXC.Cores",
		"Label": "LXC CPU Cores",
		"HelpText": "The amount of CPU cores the LXC is assigned",
		"DefaultValue": "1",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "74b64687-8aed-433d-bce3-714bfd738927",
		"Name": "Proxmox.LXC.Memory",
		"Label": "LXC Memory",
		"HelpText": "The amount of Memory the LXC is assigned.",
		"DefaultValue": "2048",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "85c52eb6-a25f-4f8e-a068-2a165160d94d",
		"Name": "Proxmox.LXC.RootSize",
		"Label": "LXC Rootfs Size",
		"HelpText": "The size of the root volume for this LXC, Size is in GB",
		"DefaultValue": "60",
		"DisplaySettings": {
		  "Octopus.ControlType": "SingleLineText"
		}
	  },
	  {
		"Id": "fd072ced-1c8b-4205-a724-e9456b5152c6",
		"Name": "Proxmox.LXC.StartOnCreate",
		"Label": "LXC Start Once Created",
		"HelpText": "Should the LXC start once the LXC has been created",
		"DefaultValue": "False",
		"DisplaySettings": {
		  "Octopus.ControlType": "Checkbox"
		}
	  },
	  {
		"Id": "dfea6eea-47ff-4489-9434-8ff80bbb8694",
		"Name": "Proxmox.LXC.Force",
		"Label": "LXC Overwrite Container",
		"HelpText": "Overwrites an existing LXC with the same VMID",
		"DefaultValue": "False",
		"DisplaySettings": {
		  "Octopus.ControlType": "Checkbox"
		}
	  }
	],
	"StepPackageId": "Octopus.Script",
	"$Meta": {
	  "ExportedAt": "2023-05-04T10:44:27.968Z",
	  "OctopusVersion": "2023.2.9087",
	  "Type": "ActionTemplate"
	},
	"LastModifiedBy": "domrichardson",
	"Category": "proxmox"
  }
