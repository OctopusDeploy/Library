{
  "Id": "ActionTemplates-8",
  "Name": "Solarwinds - Unmanage",
  "Description": "Stop monitoring for a Solarwinds node, application or both",
  "ActionType": "Octopus.Script",
  "Version": 2,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}\r\n\r\n$solarwindsHost =  $OctopusParameters['Host']\r\n$node =  $OctopusParameters['NodeId']\r\n$application =  $OctopusParameters['ApplicationId']\r\n$timeout = [int] $OctopusParameters['RemanageMinutes']\r\n$username =  $OctopusParameters['Username']\r\n$password =  $OctopusParameters['Password']\r\n\r\nif ($node -ne \"\")\r\n{\r\n    Write-Host \"Stopping Solarwinds monitoring for node $node\"\r\n\r\n    $success = $false\r\n    try\r\n    {\r\n        $now = (Get-Date).ToUniversalTime().AddSeconds(5);\r\n        $remanage = $now.AddMinutes($timeout);\r\n        $nowString = $now.ToString(\"yyyy-MM-ddTHH:mm:ssZ\")\r\n        $remanageString = $remanage.ToString(\"yyyy-MM-ddTHH:mm:ssZ\")\r\n        $body = \"[\"\"$node\"\", \"\"$nowString\"\", \"\"$remanageString\"\", \"\"false\"\"]\"\r\n        $header = @{}\r\n        $header.Add(\"Authorization\", \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($username+\":\"+$password)))\r\n        $uri = \"https://\" + $solarwindsHost + \":17778/SolarWinds/InformationService/v3/Json/Invoke/Orion.Nodes/Unmanage\"\r\n\r\n        Write-Host \"Sending request $body to $uri\"\r\n\r\n        $response = Invoke-WebRequest -Uri $uri -Method Post -Body $body -Headers $header -ContentType \"application/json\" -UseBasicParsing\r\n\r\n        if ($response.StatusCode -eq 200)\r\n        {\r\n            $success = $true\r\n        }\r\n    }\r\n    catch\r\n    {\r\n        Write-Host \"Something went wrong:\"\r\n        Write-Host $_.Exception\r\n    }\r\n\r\n    if (!$success)\r\n    {\r\n        throw \"Unmanaging node failed.\"\r\n    }\r\n\r\n    Write-Host \"Unmanaged node $node. Will automatically remanage at $remanage.ToString()\"\r\n}\r\n\r\nif ($application -ne \"\")\r\n{\r\n    Write-Host \"Stopping Solarwinds monitoring for application $application\"\r\n\r\n    $success = $false\r\n    try\r\n    {\r\n        $now = (Get-Date).ToUniversalTime().AddSeconds(5);\r\n        $remanage = $now.AddMinutes($timeout);\r\n        $nowString = $now.ToString(\"yyyy-MM-ddTHH:mm:ssZ\")\r\n        $remanageString = $remanage.ToString(\"yyyy-MM-ddTHH:mm:ssZ\")\r\n        $body = \"[\"\"$application\"\", \"\"$nowString\"\", \"\"$remanageString\"\", \"\"false\"\"]\"\r\n        $header = @{}\r\n        $header.Add(\"Authorization\", \"Basic \"+[System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($username+\":\"+$password)))\r\n        $uri = \"https://\" + $solarwindsHost + \":17778/SolarWinds/InformationService/v3/Json/Invoke/Orion.APM.Application/Unmanage\"\r\n\r\n        Write-Host \"Sending request $body to $uri\"\r\n\r\n        $response = Invoke-WebRequest -Uri $uri -Method Post -Body $body -Headers $header -ContentType \"application/json\" -UseBasicParsing\r\n\r\n        if ($response.StatusCode -eq 200)\r\n        {\r\n            $success = $true\r\n        }\r\n    }\r\n    catch\r\n    {\r\n        Write-Host \"Something went wrong:\"\r\n        Write-Host $_.Exception\r\n    }\r\n\r\n    if (!$success)\r\n    {\r\n        throw \"Unmanaging application failed.\"\r\n    }\r\n\r\n    Write-Host \"Unmanaged application $application. Will automatically remanage at $remanage.ToString()\"\r\n}"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "Host",
      "Label": "Host",
      "HelpText": "IP or DNS of the Solarwinds monitoring server",
      "DefaultValue": null
    },
    {
      "Name": "NodeId",
      "Label": "Node ID",
      "HelpText": "Solarwinds ID of machine to be unmonitored. Starts with 'N:'.",
      "DefaultValue": null
    },
    {
      "Name": "ApplicationId",
      "Label": "Application ID",
      "HelpText": "Solarwinds ID of application to be unmonitored. Starts with 'AA:'.",
      "DefaultValue": null
    },
    {
      "Name": "RemanageMinutes",
      "Label": "Re-manage after (minutes)",
      "HelpText": "Automatically begins monitoring of a node after given minutes.",
      "DefaultValue": null
    },
    {
      "Name": "Username",
      "Label": "Username",
      "HelpText": "Username for the Solarwinds console user.",
      "DefaultValue": null
    },
    {
      "Name": "Password",
      "Label": "Password",
      "HelpText": "Password for the Solarwinds console user",
      "DefaultValue": null
    }
  ],
  "LastModifiedOn": "2014-05-16T10:24:11.714+00:00",
  "LastModifiedBy": "sportingsolutions",
  "$Meta": {
    "ExportedAt": "2014-05-16T10:24:13.698Z",
    "OctopusVersion": "2.4.5.46",
    "Type": "ActionTemplate"
  }
}