{
  "Id": "0f119877-288c-4110-aec9-0f693c2e7922",
  "Name": "Register Linux Tentacle",
  "Description": "This Step Template will Register a Linux Tentacle.
[Reference](https://octopus.com/docs/infrastructure/deployment-targets/linux).",
  "ActionType": "Octopus.Script",
  "Version": 17,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "$envname = \"#{Octopus.Environment.Name}\"
$serverurl = \"#{if Octopus.Web.ServerUri}#{Octopus.Web.ServerUri}#{else}#{Octopus.Web.BaseUrl}#{/if}\"

$headers = @{\"X-Octopus-ApiKey\"=\"$apikey\"}
$putHeaders = @{\"X-HTTP-Method-Override\"=\"PUT\"; \"X-Octopus-ApiKey\"=\"$apikey\"}

function Test-SpacesApi {
\tWrite-Verbose \"Checking API compatibility\";
\t$rootDocument = Invoke-WebRequest \"$serverurl/api\" -Headers $headers -Method Get -UseBasicParsing | ConvertFrom-Json;
    if($rootDocument.Links -ne $null -and $rootDocument.Links.Spaces -ne $null) {
    \tWrite-Verbose \"Spaces API found\"
    \treturn $true;
    }
    Write-Verbose \"Pre-spaces API found\"
    return $false;
}

if(Test-SpacesApi) {
\t$spaceId = $OctopusParameters['Octopus.Space.Id'];
    if([string]::IsNullOrWhiteSpace($spaceId)) {
        throw \"This step needs to be run in a context that provides a value for the 'Octopus.Space.Id' system variable. In this case, we received a blank value, which could indicate you do not have the correct permissions.\";
    }
\t$baseApiUrl = \"/api/$spaceId\" ;
} else {
\t$baseApiUrl = \"/api\" ;
}

$environments = Invoke-RestMethod \"$serverurl$baseApiUrl/environments/all\" -Headers $headers -Method Get
$theEnvironment = $environments | ? { $_.Name -eq $envname }

$machines = Invoke-RestMethod \"$serverurl$baseApiUrl/machines/all\" -Headers $headers -Method Get
$theMachine = $machines | ? { $_.Name -eq $machineName }

$accounts = Invoke-RestMethod \"$serverurl$baseApiUrl/accounts/all\" -Headers $headers -Method Get
$theAccount = $accounts | ? { $_.Name -eq $accountname }

if (!($theMachine.Name -eq $machineName))
{
\t#this returns a MachineResource, but we need to post a DeploymentTargetResource which requires environments and roles
\t$discovered = Invoke-RestMethod \"$serverurl$baseApiUrl/machines/discover?host=$hostdetails&type=Ssh\" -Headers $headers -Method Get
    $discovered.Endpoint.AccountId = $theAccount.Id
    $discovered.Name = $machineName
\t$discovered | add-member -Name \"Roles\" -value @($role) -MemberType NoteProperty
    $discovered | add-member -Name \"EnvironmentIds\" -value @($theEnvironment.Id) -MemberType NoteProperty
\t
    $registerStatus = Invoke-RestMethod \"$serverurl$baseApiUrl/machines\" -Headers $headers -Method Post -Body ($discovered | ConvertTo-Json -Depth 10)
    
    If ($registerStatus.Status -eq \"Online\")
    {
        Write-Output \"$registerStatus.Name is Successfully Registered\"
    }
    else
    {
        Write-Warning \"$hostdetails had issues, Please check Environments Page\"
    }
}
else
{
    Write-Output \"Machine with name $machineName already exists with the status $($theMachine.Status)\" 
}",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "c79678c9-4d64-417d-982f-904683631240",
      "Name": "apikey",
      "Label": "API Key",
      "HelpText": "API Key with appropriate access",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "bca181ad-f28b-42a3-ab2c-c79274224c11",
      "Name": "accountname",
      "Label": "Account Name",
      "HelpText": "The Account Name with access to the Host name to register",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "3ace411d-18d2-4349-ab8d-02823e933f6e",
      "Name": "hostdetails",
      "Label": "HostName/IPaddress",
      "HelpText": "HostName or IPaddress of the Machine to register",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "517a89a1-be83-4cce-9e32-8359d0715686",
      "Name": "role",
      "Label": "Role Name",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "37527e4f-643a-4e06-9650-1a40d11d7b7a",
      "Name": "machineName",
      "Label": "Machine Name",
      "HelpText": "Machine Name to register",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
   "LastModifiedOn": "2017-01-09T20:46:19.041+00:00",
   "LastModifiedBy": "benjimac93",
  "$Meta": {
    "ExportedAt": "2021-08-23T12:40:10.975Z",
    "OctopusVersion": "2021.1.7687",
    "Type": "ActionTemplate"
  },
 "Category": "Linux"
}
