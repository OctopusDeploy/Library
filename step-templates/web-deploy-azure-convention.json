{
  "Id": "c3ff8c78-c1cd-43ea-aedb-f5ac7dac3352",
  "Name": "Web Deploy to Azure by convention",
  "Description": "Makes it super simple to deploy websites to different regions inside a single process.\n\nThis script assumes that you want to deploy websites like these to multiple regions:\n\n- playground.mydomain.com\n- status.mydomain.com\n\nWhen you deploy to staging and production to 3 regions, this means that each website requires 3 (regions) * 2 (deployment slots) = 6 scripts. If you want this deployed using ms web deploy, you will need 6 * 5 = 30 variables (for a single website).\n\nWith this convention script you only need a few variables, but it requires some convention (mostly done by Azure anyway):\n\n- [prefix]-[websitename]-[region]\n- [prefix]-[websitename]-[region]-staging\n\nSo\n\n- mydomain-playground-eu-west\n- mydomain-playground-eu-west-staging\n\nThe following variables are required:\n\n- AzurePrefix\n- AzureName\n- AzurePassword-[region]\n- AzurePassword-[region]-staging\n\nThe password is required for each region and deployment slot, the rest is fully determined by convention.",
  "ActionType": "Octopus.Script",
  "Version": 29,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.Web.Deployment\")\r\n# A collection of functions that can be used by script steps to determine where packages installed\r\n# by previous steps are located on the filesystem.\r\n \r\nfunction Find-InstallLocations {\r\n    $result = @()\r\n    $OctopusParameters.Keys | foreach {\r\n        if ($_.EndsWith('].Output.Package.InstallationDirectoryPath')) {\r\n            $result += $OctopusParameters[$_]\r\n        }\r\n    }\r\n    return $result\r\n}\r\n \r\nfunction Find-InstallLocation($stepName) {\r\n    $result = $OctopusParameters.Keys | where {\r\n        $_.Equals(\"Octopus.Action[$stepName].Output.Package.InstallationDirectoryPath\",  [System.StringComparison]::OrdinalIgnoreCase)\r\n    } | select -first 1\r\n \r\n    if ($result) {\r\n        return $OctopusParameters[$result]\r\n    }\r\n \r\n    throw \"No install location found for step: $stepName\"\r\n}\r\n \r\nfunction Find-SingleInstallLocation {\r\n    $all = @(Find-InstallLocations)\r\n    if ($all.Length -eq 1) {\r\n        return $all[0]\r\n    }\r\n    if ($all.Length -eq 0) {\r\n        throw \"No package steps found\"\r\n    }\r\n    throw \"Multiple package steps have run; please specify a single step\"\r\n}\r\n\r\nfunction Test-LastExit($cmd) {\r\n    if ($LastExitCode -ne 0) {\r\n        Write-Host \"##octopus[stderr-error]\"\r\n        write-error \"$cmd failed with exit code: $LastExitCode\"\r\n    }\r\n}\r\n\r\n# Somehow we can only check for exactly 'True'\r\n$isStagingText = $OctopusParameters['IsStaging'];\r\n$isStaging = $isStagingText -eq \"True\"\r\n\r\nWrite-Host \"Is staging text: $isStagingText\"\r\nWrite-Host \"Is staging: $isStaging\"\r\n\r\n$stepName = $OctopusParameters['WebDeployPackageStepName']\r\nif ([string]::IsNullOrEmpty($stepName)) {\r\n\tWrite-Host \"Defaulting to step name Extract package\"\r\n\t$stepName = \"Extract package\"\r\n}\r\n\r\nif ($isStaging) {\r\n\t$stepName = $stepName + \" - staging\"\r\n}\r\n\r\n$stepPath = \"\"\r\nif (-not [string]::IsNullOrEmpty($stepName)) {\r\n    Write-Host \"Finding path to package step: $stepName\"\r\n    $stepPath = Find-InstallLocation $stepName\r\n} else {\r\n    $stepPath = Find-SingleInstallLocation\r\n}\r\nWrite-Host \"Package was installed to: $stepPath\"\r\n\r\nWrite-Host \"##octopus[stderr-progress]\"\r\n \r\nWrite-Host \"Publishing Website\"\r\n\r\n$prefix = $OctopusParameters['Prefix']\r\nif ([string]::IsNullOrEmpty($prefix)) {\r\n\tWrite-Host \"Prefix is empty, reading prefix from variable set using AzurePrefix\"\r\n\t$prefix = $OctopusParameters['AzurePrefix']\r\n}\r\n\r\n$websiteName = $OctopusParameters['WebsiteName']\r\nif ([string]::IsNullOrEmpty($websiteName)) {\r\n\tWrite-Host \"WebsiteName is empty, reading website name from variable set using AzureName\"\r\n\t$websiteName = $OctopusParameters['AzureName']\r\n}\r\n\r\n$regionName = $OctopusParameters['RegionName']\r\n\r\n$publishUrl = \"$prefix-$websiteName-$regionName\"\r\nif ($isStaging) {\r\n\t$publishUrl = $publishUrl + \"-staging\"\r\n}\r\n$publishUrl = $publishUrl + \".scm.azurewebsites.net:443\"\r\n\r\n$userName = '$' + \"$prefix-$websiteName-$regionName\"\r\nif ($isStaging) {\r\n\t$userName = $userName + \"__staging\"\r\n}\r\n\r\n$passwordKey = \"AzurePassword-$regionName\"\r\nif ($isStaging) {\r\n\t$passwordKey = $passwordKey + \"-staging\"\r\n}\r\n\r\nWrite-Host \"Using the following values to publish:\"\r\nWrite-Host \" * Publish url: $publishUrl\"\r\nWrite-Host \" * Website name: $websiteName\"\r\nWrite-Host \" * User name: $userName\"\r\nWrite-Host \" * Password variable: $passwordKey\"\r\n\r\n$destBaseOptions = new-object Microsoft.Web.Deployment.DeploymentBaseOptions\r\n$destBaseOptions.UserName = $userName\r\n$destBaseOptions.Password =  $OctopusParameters[$passwordKey]\r\n$destBaseOptions.ComputerName = \"https://$publishUrl/msdeploy.axd?site=$websiteName\"\r\n$destBaseOptions.AuthenticationType = \"Basic\"\r\n\r\n$syncOptions = new-object Microsoft.Web.Deployment.DeploymentSyncOptions\r\n#$syncOptions.WhatIf = $false\r\n$syncOptions.UseChecksum = $true\r\n\r\n$deploymentObject = [Microsoft.Web.Deployment.DeploymentManager]::CreateObject(\"contentPath\", $stepPath)\r\n$deploymentObject.SyncTo(\"contentPath\", $websiteName, $destBaseOptions, $syncOptions)"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "WebsiteName",
      "Label": "Website Name",
      "HelpText": "The name of the website (e.g. playground)\n\nIf you leave this empty, this field will use the _AzureName_ variable.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "RegionName",
      "Label": "Region Name",
      "HelpText": "The name of the region (e.g. eu-west)",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "IsStaging",
      "Label": "Is Staging",
      "HelpText": "Determines whether this is staging or not.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Name": "Prefix",
      "Label": "Prefix",
      "HelpText": "The prefix. If you are smart, your websites look like this:\n\n[prefix]-[websitename]-[region]\n\nThis allows you to deploy a lot of subdomains for a complete solution to multiple regions.\n\nIf you leave this empty, this field will use the _AzurePrefix_ variable.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "WebDeployPackageStepName",
      "Label": "Package step name",
      "HelpText": "Name of the previously-deployed package step that contains the files that you want to deploy.\n\nIf you leave this empty, this field will default to 'Extract package'",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedBy": "GeertvanHorrik",
  "$Meta": {
    "ExportedAt": "2015-11-03T00:25:05.516+00:00",
    "OctopusVersion": "3.0.20.0",
    "Type": "ActionTemplate"
  },
  "Category": "webDeploy"
}