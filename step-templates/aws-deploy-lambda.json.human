{
    "Id": "9b5ee984-bdd2-49f0-a78a-07e21e60da8a",
    "Name": "AWS - Deploy Lambda Function",
    "Description": "Deploys a Zip file to an AWS Lambda function.  

This step does **not** perform variable substitution (it used to).  It takes the .zip file from the specified feed and uploads it to AWS as is.  The recommended approach to changing a lambda configuration per environment is to use [environment variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html)  

This step uses the following AWS CLI commands to deploy the AWS Lambda.  You will be required to install the AWS CLI on your server/worker for this to work.  The AWS CLI is pre-installed on the [dynamic workers](https://octopus.com/docs/infrastructure/workers/dynamic-worker-pools) in Octopus Cloud as well as the provided docker containers for [Execution Containers](https://octopus.com/docs/deployment-process/execution-containers-for-workers).

- [create-function](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-function.html)
- [get-function](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/get-function.html)
- [publish-version](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/publish-version.html)
- [tag-resource](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/tag-resource.html)
- [untag-resource](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/untag-resource.html)
- [update-function-code](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-function-code.html)
- [update-function-configuration](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/update-function-configuration.html)

This step template is worker-friendly, you can pass in a package reference rather than having to reference a previous step that downloaded the package. This step requires **Octopus Deploy 2019.10.0** or higher.

## Output Variables

This step template sets the following output variables:

- `LambdaArn`: The ARN of the Lambda Function
- `PublishedVersion`: The most recent version published (only set when Publish is set to `Yes`).",
    "ActionType": "Octopus.AwsRunScript",
    "Version": 8,
    "CommunityActionTemplateId": null,
    "Packages": [
      {
        "Id": "8dbae499-5aa8-438e-a2fe-ae29fb8f0a39",
        "Name": "AWS.Lambda.Package",
        "PackageId": null,
        "FeedId": null,
        "AcquisitionLocation": "Server",
        "Properties": {
          "Extract": "False",
          "SelectionMode": "deferred",
          "PackageParameterName": "AWS.Lambda.Package"
        }
      }
    ],
    "Properties": {
      "Octopus.Action.Script.ScriptSource": "Inline",
      "Octopus.Action.Script.Syntax": "PowerShell",
      "Octopus.Action.Aws.AssumeRole": "False",
      "Octopus.Action.AwsAccount.UseInstanceRole": "False",
      "Octopus.Action.AwsAccount.Variable": "#{AWS.Lambda.Account}",
      "Octopus.Action.Aws.Region": "#{AWS.Lambda.Region}",
      "Octopus.Action.Script.ScriptBody": "$functionName = $OctopusParameters[\"AWS.Lambda.FunctionName\"] 
$functionRole = $OctopusParameters[\"AWS.Lambda.FunctionRole\"]
$functionRunTime = $OctopusParameters[\"AWS.Lambda.Runtime\"]
$functionHandler = $OctopusParameters[\"AWS.Lambda.FunctionHandler\"]
$functionMemorySize = $OctopusParameters[\"AWS.Lambda.MemorySize\"]
$functionDescription = $OctopusParameters[\"AWS.Lambda.Description\"]
$functionVPCSubnetId = $OctopusParameters[\"AWS.Lambda.VPCSubnetIds\"]
$functionVPCSecurityGroupId = $OctopusParameters[\"AWS.Lambda.VPCSecurityGroupIds\"]
$functionEnvironmentVariables = $OctopusParameters[\"AWS.Lambda.EnvironmentVariables\"]
$functionEnvironmentVariablesKey = $OctopusParameters[\"AWS.Lambda.EnvironmentVariablesKey\"]
$functionTimeout = $OctopusParameters[\"AWS.Lambda.FunctionTimeout\"]
$functionTags = $OctopusParameters[\"AWS.Lambda.Tags\"]
$functionFileSystemConfig = $OctopusParameters[\"AWS.Lambda.FileSystemConfig\"]
$functionDeadLetterConfig = $OctopusParameters[\"AWS.Lambda.DeadLetterConfig\"]
$functionTracingConfig = $OctopusParameters[\"AWS.Lambda.TracingConfig\"]
$functionVersionNumber = $OctopusParameters[\"Octopus.Action.Package[AWS.Lambda.Package].PackageVersion\"]
$functionPublishOption = $OctopusParameters[\"AWS.Lambda.Publish\"]

$functionReleaseNumber = $OctopusParameters[\"Octopus.Release.Number\"]
$functionRunbookRun = $OctopusParameters[\"Octopus.RunbookRun.Id\"]
$stepName = $OctopusParameters[\"Octopus.Step.Name\"]

$regionName = $OctopusParameters[\"AWS.Lambda.Region\"]
$newArchiveFileName = $OctopusParameters[\"Octopus.Action.Package[AWS.Lambda.Package].PackageFilePath\"]

if ([string]::IsNullOrWhiteSpace($functionName))
{
\tWrite-Error \"The parameter Function Name is required.\"
    Exit 1
}

if ([string]::IsNullOrWhiteSpace($functionRole))
{
\tWrite-Error \"The parameter Role is required.\"
    Exit 1
}

if ([string]::IsNullOrWhiteSpace($functionRunTime))
{
\tWrite-Error \"The parameter Run Time is required.\"
    Exit 1
}

if ([string]::IsNullOrWhiteSpace($functionHandler))
{
\tWrite-Error \"The parameter Handler is required.\"
    Exit 1
}

if ([string]::IsNullOrWhiteSpace($functionPublishOption))
{
\tWrite-Error \"The parameter Publish is required.\"
    Exit 1
}

if ([string]::IsNullOrWhiteSpace($functionReleaseNumber) -eq $false)
{
    $deployVersionTag = \"Octopus-Release=$functionReleaseNumber\"
}
else
{
\t$deployVersionTag = \"Octopus-Runbook-Run=$functionRunbookRun\"
}

Write-Host \"Function Name: $functionName\"
Write-Host \"Function Role: $functionRole\"
Write-Host \"Function Runtime: $functionRunTime\"
Write-Host \"Function Handler: $functionHandler\"
Write-Host \"Function Memory Size: $functionMemorySize\"
Write-Host \"Function Description: $functionDescription\"
Write-Host \"Function Subnet Ids: $functionVPCSubnetId\"
Write-Host \"Function Security Group Ids: $functionVPCSecurityGroupId\"
Write-Host \"Function Environment Variables: $functionEnvironmentVariables\"
Write-Host \"Function Environment Variables Key: $functionEnvironmentVariablesKey\"
Write-Host \"Function Timeout: $functionTimeout\"
Write-Host \"Function Tags: $functionTags\"
Write-Host \"Function File System Config: $functionFileSystemConfig\"
Write-Host \"Function Dead Letter Config: $functionDeadLetterConfig\"
Write-Host \"Function Tracing Config: $functionTracingConfig\"
Write-Host \"Function file path: fileb://$newArchiveFileName\"
Write-Host \"Function Publish: $functionPublishOption\"

Write-Host \"Attempting to find the function $functionName in the region $regionName\"
$hasExistingFunction = $true

try
{
    $existingFunction = aws lambda get-function --function-name \"$functionName\" 2> $null
    
    Write-Host \"The exit code from the lookup was $LASTEXITCODE\"
    if ($LASTEXITCODE -eq 255 -or $LASTEXITCODE -eq 254)
    {
    \t$hasExistingFunction = $false
    }   
    
    $existingFunction = $existingFunction | ConvertFrom-Json
}
catch
{
\tWrite-Host \"The function was not found\"
\t$hasExistingFunction = $false
}

Write-Host \"Existing functions: $hasExistingFunction\"
Write-Host $existingFunction

$aliasInformation = $null
if ($hasExistingFunction -eq $false)
{
\tWrite-Highlight \"Creating $functionName in $regionName\"    
\t$functionInformation = aws lambda create-function --function-name \"$functionName\" --zip-file fileb://$newArchiveFileName --handler $functionHandler --runtime $functionRuntime --role $functionRole --memory-size $functionMemorySize
}
else
{
\tWrite-Highlight \"Updating the $functionName code\"
    $updatedConfig = aws lambda update-function-code --function-name \"$functionName\" --zip-file fileb://$newArchiveFileName
    
    Write-Highlight \"Waiting for update to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
    
    Write-Highlight \"Updating the $functionName base configuration\"    
    $functionInformation = aws lambda update-function-configuration --function-name \"$functionName\" --role $functionRole --handler $functionHandler --runtime $functionRuntime --memory-size $functionMemorySize
    
    Write-Highlight \"Waiting for base configuration update to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

$functionInformation = $functionInformation | ConvertFrom-JSON
$functionArn = $functionInformation.FunctionArn

Write-Host \"Function ARN: $functionArn\"

if ([string]::IsNullOrWhiteSpace($functionEnvironmentVariables) -eq $false)
{
\tWrite-Highlight \"Environment variables specified, updating environment variables configuration for $functionName\"
\t$environmentVariables = \"Variables={$functionEnvironmentVariables}\"
    
    if ([string]::IsNullOrWhiteSpace($functionEnvironmentVariablesKey) -eq $true)
    {
    \t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --environment \"$environmentVariables\"
    }
    else
    {
    \t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --environment \"$environmentVariables\" --kms-key-arn \"$functionEnvironmentVariablesKey\"
    }
    
    Write-Highlight \"Waiting for environment variable update to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionTimeout) -eq $false)
{
\tWrite-Highlight \"Timeout specified, updating timeout configuration for $functionName\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --timeout \"$functionTimeout\"
    
    Write-Highlight \"Waiting for timeout upate to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionTags) -eq $false)
{
\tWrite-Highlight \"Tags specified, updating tags configuration for $functionName\"
\t$updatedConfig = aws lambda tag-resource --resource \"$functionArn\" --tags \"$functionTags\"
}

if ([string]::IsNullOrWhiteSpace($deployVersionTag) -eq $false)
{
\tWrite-Highlight \"Deploy version tag found with value of $deployVersionTag, updating tags configuration for $functionName\"
    aws lambda untag-resource --resource \"$functionArn\" --tag-keys \"Octopus-Release\" \"Octopus-Runbook-Run\"
\t$updatedConfig = aws lambda tag-resource --resource \"$functionArn\" --tags \"$deployVersionTag\"
}

if ([string]::IsNullOrWhiteSpace($functionVPCSubnetId) -eq $false -and [string]::IsNullOrWhiteSpace($functionVPCSecurityGroupId) -eq $false)
{
\tWrite-Highlight \"VPC subnets and security group specified, updating vpc configuration for $functionName\"
\t$vpcConfig = \"SubnetIds=$functionVPCSubnetId,SecurityGroupIds=$functionVPCSecurityGroupId\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --vpc-config \"$vpcConfig\"
    
    Write-Highlight \"Waiting for vpc configuration to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionDescription) -eq $false)
{
\tWrite-Highlight \"Description specified, updating description configuration for $functionName\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --description \"$functionDescription\"
    
    Write-Highlight \"Waiting for description configuration ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionFileSystemConfig) -eq $false)
{
\tWrite-Highlight \"File System Config specified, updating file system configuration for $functionName\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --file-system-configs \"$functionFileSystemConfig\"\t
    
    Write-Highlight \"Wating for file system configuration update to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionDeadLetterConfig) -eq $false)
{
\tWrite-Highlight \"Dead Letter specified, updating dead letter configuration for $functionName\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --dead-letter-config \"$functionDeadLetterConfig\"\t
    
    Write-Highlight \"Waitng for Dead Letter configuration update to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

if ([string]::IsNullOrWhiteSpace($functionTracingConfig) -eq $false)
{
\tWrite-Highlight \"Tracing config specified, updating tracing configuration for $functionName\"
\t$updatedConfig = aws lambda update-function-configuration --function-name \"$functionArn\" --tracing-config \"$functionTracingConfig\"\t
    
    Write-Highlight \"Waiting for tracing configuration to complete ...\"
    aws lambda wait function-updated --function-name \"$functionName\"
}

Write-Host $updatedConfig | ConvertFrom-JSON

if ($functionPublishOption -eq \"Yes\")
{
\tWrite-Highlight \"Publishing the function with the description $functionVersionNumber to create a snapshot of the current code and configuration of this function in AWS.\"
\t$publishedVersion = aws lambda publish-version --function-name \"$functionArn\" --description \"$functionVersionNumber\"
    
    $publishedVersion = $publishedVersion | ConvertFrom-JSON
    
    Write-Highlight \"Setting the output variable 'Octopus.Action[$($stepName)].Output.PublishedVersion' to $($publishedVersion.Version)\"
    Set-OctopusVariable -name \"PublishedVersion\" -value \"$($publishedVersion.Version)\"    
}

Write-Highlight \"Setting the output variable 'Octopus.Action[$($stepName)].Output.LambdaArn' to $functionArn\"
Set-OctopusVariable -name \"LambdaArn\" -value \"$functionArn\"

Write-Highlight \"AWS Lambda $functionName successfully deployed.\"",
      "Octopus.Action.EnabledFeatures": ""
    },
    "Parameters": [
      {
        "Id": "bf72bc3e-3ce6-4b63-b23f-1171b5cc72dd",
        "Name": "AWS.Lambda.FunctionName",
        "Label": "Function Name",
        "HelpText": "Required.

The name of the function to create or update.  See [documentation](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-function.html#options)

Examples:
- Function name - my-function .
- Function ARN - arn:aws:lambda:us-west-2:123456789012:function:my-function .
- Partial ARN - 123456789012:function:my-function .

The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.
",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "13dcec09-00f8-4af0-80e4-23bcb47eaf17",
        "Name": "AWS.Lambda.Account",
        "Label": "AWS Account",
        "HelpText": "Required.

The AWS Account with permissions to create / update AWS Lambdas.
",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "AmazonWebServicesAccount"
        }
      },
      {
        "Id": "8fd7ff24-7557-4f96-a809-ce611c473b13",
        "Name": "AWS.Lambda.Region",
        "Label": "Region",
        "HelpText": "Required.

The region where the function will live.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Select",
          "Octopus.SelectOptions": "us-east-2|US East (Ohio)
us-east-1|US East (N. Virginia)
us-west-1|US West (N. California)
us-west-2|US West (Oregon)
af-south-1|Africa (Cape Town)
ap-east-1|Asia Pacific (Hong Kong)
ap-south-1|Asia Pacific (Mumbai)
ap-northeast-3|Asia Pacific (Osaka-Local)
ap-northeast-2|Asia Pacific (Seoul)
ap-southeast-1|Asia Pacific (Singapore)
ap-southeast-2|Asia Pacific (Sydney)
ap-northeast-1|Asia Pacific (Tokyo)
ca-central-1|Canada (Central)
eu-central-1|Europe (Frankfurt)
eu-west-1|Europe (Ireland)
eu-west-2|Europe (London)
eu-south-1|Europe (Milan)
eu-west-3|Europe (Paris)
eu-north-1|Europe (Stockholm)
me-south-1|Middle East (Bahrain)
sa-east-1|South America (São Paulo)"
        }
      },
      {
        "Id": "11928ce7-e1b8-451c-9a9b-481acac60611",
        "Name": "AWS.Lambda.Package",
        "Label": "Package",
        "HelpText": "Required.

The package containing the code you wish to deploy to the AWS Lambda function.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Package"
        }
      },
      {
        "Id": "d45499b4-5f4a-4bae-a4b9-336e97a75cdc",
        "Name": "AWS.Lambda.FunctionRole",
        "Label": "Function Role",
        "HelpText": "Required.

The Amazon Resource Name (ARN) of the function’s execution role.  This role must exist prior to this step is run.  See [documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html) for more detail on creating an execution role.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "926b93c6-a47a-4899-9865-e7329b93b4b8",
        "Name": "AWS.Lambda.Runtime",
        "Label": "Runtime",
        "HelpText": "Required.

The runtime of the AWS Lambda.  See [documentation](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/create-function.html#options) for more details on what runtimes are supported.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Select",
          "Octopus.SelectOptions": "nodejs|nodejs
nodejs4.3|nodejs4.3
nodejs4.3-edge|nodejs4.3-edge
nodejs6.10|nodejs6.10
nodejs8.10|nodejs8.10
nodejs10.x|nodejs10.x
nodejs12.x|nodejs12.x
nodejs14.x|nodejs14.x
java8|java8
java8.al2|java8.al2
java11|java11
python2.7|python2.7
python3.6|python3.6
python3.7|python3.7
python3.8|python3.8
python3.9|python3.9
dotnetcore1.0|dotnetcore1.0
dotnetcore2.0|dotnetcore2.0
dotnetcore2.1|dotnetcore2.1
dotnetcore3.1|dotnetcore3.1
dotnet6|dotnet6
nodejs4.3-edge|nodejs4.3-edge
go1.x|go1.x
ruby2.5|ruby2.5
ruby2.7|ruby2.7
provided|provided
provided.al2|provided.al2"
        }
      },
      {
        "Id": "1b8bfb82-3736-4d9a-8b05-a39319eb5735",
        "Name": "AWS.Lambda.FunctionHandler",
        "Label": "Handler",
        "HelpText": "Required.

The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see [Programming Model](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-features.html)",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "68428e8e-abc3-4f29-a5bb-fe635281d073",
        "Name": "AWS.Lambda.MemorySize",
        "Label": "Memory Size",
        "HelpText": "Required.

The amount of memory that your function has access to. Increasing the function’s memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.",
        "DefaultValue": "128",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "948280bb-50af-495b-9d1d-2f7567a0b0cc",
        "Name": "AWS.Lambda.Description",
        "Label": "Description",
        "HelpText": "Optional.

A description of the function.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "ed2ab9bb-d8a3-4ab4-a576-36b6c0a8f75d",
        "Name": "AWS.Lambda.VPCSubnetIds",
        "Label": "VPC Subnet Ids",
        "HelpText": "Optional.

Format: `SubnetId1,SubnetId2`

For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "8c2793a7-1a88-40a2-be28-3a38c7b40658",
        "Name": "AWS.Lambda.VPCSecurityGroupIds",
        "Label": "VPC Security Group Ids",
        "HelpText": "Optional.

Format: `SecurityGroupId1,SecurityGroupId2`

For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "ba3edded-1e19-47c4-990a-ebdf4eb0bcca",
        "Name": "AWS.Lambda.EnvironmentVariables",
        "Label": "Environment Variables",
        "HelpText": "Optional.

Format: `KeyName1=string,KeyName2=string`

Environment variables that are accessible from function code during execution.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "58d76440-e4f5-46fb-a095-84aedd904a18",
        "Name": "AWS.Lambda.EnvironmentVariablesKey",
        "Label": "Environment Variables Encryption Key",
        "HelpText": "Optional.

The ARN of the AWS Key Management Service (AWS KMS) key that’s used to encrypt your function’s environment variables. If it’s not provided, AWS Lambda uses a default service key.
",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "5b9b3111-5349-49e6-ab0d-f386a53bdd7c",
        "Name": "AWS.Lambda.FunctionTimeout",
        "Label": "Timeout",
        "HelpText": "Optional.

The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "567f5eeb-e174-4c8f-8b17-36bd9457ea29",
        "Name": "AWS.Lambda.Tags",
        "Label": "Tags",
        "HelpText": "Optional.

Format: `KeyName1=string,KeyName2=string`

A list of tags to apply to the function.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "297f4f8e-3837-43a3-b844-a0e0d02e9d5b",
        "Name": "AWS.Lambda.FileSystemConfig",
        "Label": "File System Config",
        "HelpText": "Optional.

Format: `Arn=string,LocalMountPath=string`

Connection settings for an Amazon EFS file system.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "c720a63a-7b77-4a13-b6ed-6d44126e9372",
        "Name": "AWS.Lambda.TracingConfig",
        "Label": "Tracing Config",
        "HelpText": "Optional.

Format: `Mode=string`

Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "92fd8a1f-e681-4e1c-b382-3df1de12194e",
        "Name": "AWS.Lambda.DeadLetterConfig",
        "Label": "Dead Letter Config",
        "HelpText": "Optional.

Format: `TargetArn=string`

A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see [Dead Letter Queues](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq).
",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "67f8da1a-08f1-4cde-a60f-238d1fb08c98",
        "Name": "AWS.Lambda.Publish",
        "Label": "Publish",
        "HelpText": "Required.

Creates a [version](https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html) from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn’t change.

**Important**: Lambda doesn’t publish a version if the function’s configuration and code haven’t changed since the last version. Use UpdateFunctionCode or UpdateFunctionConfiguration to update the function before publishing a version.",
        "DefaultValue": "Yes",
        "DisplaySettings": {
          "Octopus.ControlType": "Select",
          "Octopus.SelectOptions": "Yes|Yes
No|No"
        }
      }
    ],
    "$Meta": {
      "ExportedAt": "2022-09-16T00:50:35.270Z",
      "OctopusVersion": "2022.3.10382",
      "Type": "ActionTemplate"
    },
    "LastModifiedBy": "twerthi",
    "Category": "aws"
  }
