#--------------------------------------------------------------------
# Azure subscription-specific variables.
#Gets Azure Account Name
$storageAccountName = $OctopusParameters["storageAccountName"]

#Gets Azure Account Key
$storageAccountKey = $OctopusParameters["storageAccountKey"]

#Gets Azure Container Name
$containerName = $OctupusParameters["containerName"]

#--------------------------------------------------------------------
#Information of the folder being uploaded
#Gets the location of the folder that is being uploaded
$fileLocation = $OctopusParamters["fileLocation"]

#Get the name of the parent folder being uploaded
$localFolder = $OctopusParameters["localFolder"]

#--------------------------------------------------------------------
#Recursive optional
$recursive = $OctopusParameters["recursive"]

#Sets the Permissions to public if the selection is true
if ([boolean]::Parse($recursive)) 
{
    
	$recurse = "-Recurse"

}

#--------------------------------------------------------------------
#Checking to see if Azure is installed on the computer
$name = 'Azure'

Write-Output "Checking if Azure Powershell is installed"

if(Get-Module -ListAvailable | Where-Object {$_.name -eq $name})
{
	(Get-Module -ListAvailable | Where-Object{ $_.Name -eq $name}) |
	Select Version, Name, Author, PowerShellVersion | Format-List;
	Write-Output "Azure Powershell is installed"
}
else
{
	#Provides the link to install Azure Powershell, if it is not installed
	Write-Warning "Please install Azure Powershell. To install Azure Powershell go to http://bit.ly/AzurePowershellDownload"
	Exit 1
}



#--------------------------------------------------------------------

#Initialises the Azure Credentials based on the Storage Account Name and the Storage Account Key, 
#so that we can invoke the APIs further down. 
$storageContext = New-AzureStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $storageAccountKey

#--------------------------------------------------------------------

$files = Get-ChildItem $localFolder
#Gets each file in the data subfolder and uploads them
foreach($file in $files)
{
  #Gets the location of the file 
  $fileName = "$currentLocation\$file"
  #Gets the blob name that the file will be uploaded to
  $blobName = "$localFolder/$file"
  #Gives the user an update on the progress
  Write-Output "copying $fileName to $blobName"
  #Sets the location and uploads the file
  Set-AzureStorageBlobContent -File $filename -Container $containerName -Blob $blobName -Context $storageContext -Force $recurse
} 

Write-Output "All files in $localFolder uploaded to $containerName!"
