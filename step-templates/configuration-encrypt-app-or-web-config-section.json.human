{
  "Id": "c79b5e6b-88ac-47d5-8678-99e8ab2a1cd9",
  "Name": "Configuration - Encrypt App or Web Config Section",
  "Description": "Encrypts a configuration section for the specified executable.",
  "ActionType": "Octopus.Script",
  "Version": 17,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = \"Stop\" 
function Get-Parameter($Name, $Default, [switch]$Required) {
    $result = $null

    if ($OctopusParameters -ne $null) {
        $result = $OctopusParameters[$Name]
    }

    if ($result -eq $null) {
        if ($Required) {
            throw \"Missing parameter value $Name\"
        } else {
            $result = $Default
        }
    }

    Write-Verbose \"Get-Parameter for '$($Name)' [value='$($result)' default='$($Default)']\"

    return $result
}

function HandleError($message) {
\tif (!$whatIf) {
\t\tthrow $message
\t} else {
\t\tWrite-Host $message -Foreground Yellow
\t}
}

function Invoke-EncryptAppConfigFile() {

    if (!(Test-Path $appPath)) {
        HandleError \"The directory $appPath must exist\"
    }

    $configurationAssembly = \"System.Configuration, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a\"
    [void] [Reflection.Assembly]::Load($configurationAssembly)
    $configuration = [System.Configuration.ConfigurationManager]::OpenExeConfiguration($appPath)

    Invoke-ProtectSections $configuration
}

function Invoke-EncryptWebConfigFile() {
    Import-module WebAdministration

\t$IISPath = \"IIS:\\Sites\\$($webSiteName)$($appPath)\\\"

    if (Test-Path $IISPath) { 
        Write-Verbose \"$webSiteName web site exists.\"

        $configurationAssembly = \"System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"
        [void] [Reflection.Assembly]::Load($configurationAssembly)
        $configuration = [System.Web.Configuration.WebConfigurationManager]::OpenWebConfiguration($appPath, $webSiteName)

        Invoke-ProtectSections $configuration
    }
    else {
        HandleError \"$webSiteName web site doesn't exists. Please check if the web site is installed.\"
    }    
}

function Invoke-ProtectSections($configuration) {

    $saveConfigFile = $false

    foreach ($sectionName in $sections) {
        $sectionName = $sectionName.Trim()      # compatible with Powershell 2.0 
        $section = $configuration.GetSection($sectionName)
        
        if ($section) {
            if (-not $section.SectionInformation.IsProtected)
            {
                Write-Verbose \"Encrypting $($section.SectionInformation.SectionName) section.\"
                $section.SectionInformation.ProtectSection($provider);
                $section.SectionInformation.ForceSave = [System.Boolean]::True;
                $saveConfigFile = $true
            }
            else {
                Write-Host \"Section $($section.SectionInformation.SectionName) is already protected.\"
            }
        }
        else {
            Write-Warning \"Section $($sectionName) doesn't exists in the configuratoin file.\"
        }

    }       

    if ($saveConfigFile) {            
        $configuration.Save([System.Configuration.ConfigurationSaveMode]::Modified);
        Write-Host \"Encryption completed successfully.\"
    }
    else {
        Write-Host \"No section(s) in the configuration were encrypted.\"
    }
}

$appType = Get-Parameter \"ApplicationType\" -Required
if ($appType -eq \"Web\") {
    $appPath = Get-Parameter \"ExecutablePath\" \"/\"
    $webSiteName = Get-Parameter \"WebSiteName\"
}
else {
    $appPath = Get-Parameter \"ExecutablePath\" -Required
}
$sectionName = Get-Parameter \"SectionToEncrypt\" -Required
$sections = $sectionName.Split(',')         # adding .Trim() doesn't work on Powershell 2.0 or below
$provider = Get-Parameter \"Provider\" \"DataProtectionConfigurationProvider\"

Write-Host \"Configuration - Encrypt config file\"
Write-Host \"Application Type: $appType\"
Write-Host \"Application Path: $appPath\"
if ($appType -eq \"Web\") { Write-Host \"Web Site Name: $webSiteName\" }
Write-Host \"Section to Encrypt: $sectionName\"
Write-Host \"Provider: $provider\"

if ($appType -eq \"Web\") {
    Invoke-EncryptWebConfigFile
}
else {
    Invoke-EncryptAppConfigFile 
}",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "9ab1281d-cf2e-4248-a583-b08e9609c96d",
      "Name": "ExecutablePath",
      "Label": "Executable path",
      "HelpText": "For Web:
The virtual path to the web site.

For Windows:
The path to the executable that has a corresponding `[Executable].exe.config` file.
 
You can get the InstallationDirectoryPath like so `#{Octopus.Action[StepName].Output.Package.InstallationDirectoryPath}`",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "0cb4f8ec-5415-47e3-87f1-3e086cc1caa1",
      "Name": "SectionToEncrypt",
      "Label": "Section to encrypt",
      "HelpText": "The name of the section(s) in the config to encrypt e.g. appSettings, connectionStrings etc.

Separate multiple sections with comma ','.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "a30203d3-53d1-450d-bbcd-92a6eb31e906",
      "Name": "Provider",
      "Label": "Provider Name",
      "HelpText": "The provider to use for encryption",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "9116d4b3-b033-416f-844c-2a351d3bbc09",
      "Name": "ApplicationType",
      "Label": "Application Type",
      "HelpText": "The application type would be web or windows.
Web will be used to encrypt web.config file.
And Windows type application will encrypt file with \"exe.config\" or \"dll.config\" extension.",
      "DefaultValue": "Web",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "Web|Web Application
Windows|Windows Service/Console App/Class Library (Dll)"
      }
    },
    {
      "Id": "90a1578e-efa2-44e4-84c0-34b037882cc5",
      "Name": "WebSiteName",
      "Label": "Web Site Name",
      "HelpText": "Enter the web site name installed in IIS.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedBy": "KevinKelchen",
  "$Meta": {
    "ExportedAt": "2017-09-19T22:33:58.801Z",
    "OctopusVersion": "3.12.4",
    "Type": "ActionTemplate"
  },
  "Category": "encrypt"
}
