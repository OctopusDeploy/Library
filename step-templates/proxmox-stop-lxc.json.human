{
    "Id": "402a0407-9fa7-4d6a-8e13-9bbfa7228960",
    "Name": "Proxmox Shutdown LXC Container",
    "Description": "Shutdown or Stop a Proxmox LXC container using the Proxmox API.

Requires a Proxmox [API token](https://pve.proxmox.com/wiki/Proxmox_VE_API#API_Tokens) to authenticate to the Proxmox Server/Cluster",
    "ActionType": "Octopus.Script",
    "Version": 1,
    "CommunityActionTemplateId": null,
    "Packages": [],
    "Properties": {
      "Octopus.Action.Script.ScriptSource": "Inline",
      "Octopus.Action.Script.Syntax": "PowerShell",
      "Octopus.Action.Script.ScriptBody": "# Proxmox Connection Variables
$ProxmoxHost = $OctopusParameters[\"Proxmox.Host\"];
$ProxmoxPort = [int]$OctopusParameters[\"Proxmox.Port\"];
$ProxmoxUser = $OctopusParameters[\"Proxmox.User\"];

$ProxmoxNode = $OctopusParameters[\"Proxmox.Node\"];

$ProxmoxTokenID = $OctopusParameters[\"Proxmox.TokenID\"];
$ProxmoxToken = $OctopusParameters[\"Proxmox.Token\"];

# LXC Variables
$LXC_VMID = [int]$OctopusParameters[\"Proxmox.LXC.VMID\"];

$BaseURL = \"https://$($ProxmoxHost):$($ProxmoxPort)/api2/json\"

$header = @{
\t\"Authorization\" = \"PVEAPIToken=$($ProxmoxUser)!$($ProxmoxTokenID)=$($ProxmoxToken)\"
}


Write-Host \"Testing Connection To Proxmox Server/Cluster ...\"

try{
\tInvoke-RestMethod -Method GET -uri \"$($BaseURL)\" -Headers $header | out-null
}catch{
\tthrow \"Couldn't Connect to the Proxmox Server/Cluster\"
}

Write-Host \"Successfully Connected To Proxmox Server/Cluster\"

$CheckLXCExists = Invoke-RestMethod -Method GET -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc/$($LXC_VMID)/status/current\" -Headers $header

if($CheckLXCExists.data -eq $null){
\tthrow \"The LXC container with vmid ($LXC_VMID) does not exist!\"
}


$LXC_Stop = $False
try {
  $Stop = [System.Convert]::ToBoolean($OctopusParameters[\"Proxmox.LXC.Stop\"])
  
  if($Stop -eq $True){
  \t$LXC_Stop = $True
  }
  
} catch {}

$LXCData = @{}

if($LXC_Stop -eq $True){
\t$LXCStopAsyncTask = (Invoke-RestMethod -Method POST -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc/$($LXC_VMID)/status/stop\" -Headers $header -Body $LXCData)
} else{
\t$LXCStopAsyncTask = (Invoke-RestMethod -Method POST -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/lxc/$($LXC_VMID)/status/shutdown\" -Headers $header -Body $LXCData)
}

$count = 1;
$maxCount = 10;

$TaskID = $LXCStopAsyncTask.Data;

DO
{
    Write-Host \"Checking if LXC has finished Shutting Down..\"
    $LXCStopAsyncTaskStatus = (Invoke-RestMethod -Method GET -uri \"$($BaseURL)/nodes/$($ProxmoxNode)/tasks/$($TaskID)/status\" -Headers $header).data
    
    if($LXCStopAsyncTaskStatus.status -eq \"stopped\"){
    \tif($LXCStopAsyncTaskStatus.exitstatus -ne \"OK\"){
        \tWrite-Error \"LXC shutdown task finished with error: $($LXCStopAsyncTaskStatus.exitstatus)\"
        }else{
        \tWrite-Host \"LXC shutdown task has successfully completed!\"
        }
        
        break;
    }
    
\tWrite-Host \"LXC shutdown task has not finished yet, retring in 5 seconds..\"
    Write-Host \"Task Status: $($LXCStopAsyncTaskStatus.status)\"
    sleep 5
    
    If($count -gt $maxCount) {
      Write-Warning \"Task Timed out!\"
      break;
    }
    $count++

} While ($count -le $maxCount)
"
    },
    "Parameters": [
      {
        "Id": "9f1a3789-a4fe-4fc4-9a66-78e73d384248",
        "Name": "Proxmox.Host",
        "Label": "Proxmox Host",
        "HelpText": "The hostname or IP address of the Proxmox cluster/host",
        "DefaultValue": "1.2.3.4",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "240b1180-7b10-48ac-90fb-796fc8eaaf41",
        "Name": "Proxmox.Port",
        "Label": "Proxmox Port",
        "HelpText": "Port number for Proxmox Cluster/Host",
        "DefaultValue": "8006",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "37d5fad7-2bd3-45da-b30c-62116f0b1940",
        "Name": "Proxmox.User",
        "Label": "Proxmox User Account",
        "HelpText": "The Proxmox user account associated with the api token.",
        "DefaultValue": "root@pam",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "72a89f72-2571-435b-b0f7-a383f08572b9",
        "Name": "Proxmox.Node",
        "Label": "Proxmox Node",
        "HelpText": "The Proxmox node in the cluster.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "b33b88c3-3949-4563-91a2-4ae264bc2d7f",
        "Name": "Proxmox.TokenID",
        "Label": "Proxmox Token ID",
        "HelpText": "This is token id that was used to create an API token in proxmox.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "eff9ca9b-b3ea-44e9-aa79-489d1d9161ee",
        "Name": "Proxmox.Token",
        "Label": "Proxmox API Token",
        "HelpText": "The API Token secret key",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Sensitive"
        }
      },
      {
        "Id": "f7be6495-cc3b-4492-bb1b-e8a178a36a91",
        "Name": "Proxmox.LXC.VMID",
        "Label": "LXC VM ID",
        "HelpText": "The LXC VMID you want to shutdown",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "94de0cbc-b722-4788-858f-fb2b32b57fd8",
        "Name": "Proxmox.LXC.Stop",
        "Label": "Force Stop LXC",
        "HelpText": "If enabled it will Force Stop the LXC Container Non-gracefully.
If disabled it will gracefully shutdown the LXC Container.",
        "DefaultValue": "False",
        "DisplaySettings": {
          "Octopus.ControlType": "Checkbox"
        }
      }
    ],
    "StepPackageId": "Octopus.Script",
    "$Meta": {
      "ExportedAt": "2023-03-16T12:30:15.168Z",
      "OctopusVersion": "2023.2.2028",
      "Type": "ActionTemplate"
    },
    "LastModifiedBy": "domrichardson",
    "Category": "proxmox"
  }
