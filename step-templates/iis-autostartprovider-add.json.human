{
  "Id": "20b8c2fd-9194-47e3-948e-badc6c2a30d5",
  "Name": "IIS AutoStartProvider - Add",
  "Description": "Add autostartprovider entry so type can be used to warm up applicaiton. Final changes in applicationHost.config look like that:

<serviceAutoStartProviders>
    <add name=\"ApplicationPreload\" type=\"WebApplication1.ApplicationPreload, WebApplication1\" />
</serviceAutoStartProviders>

where name and type are taken from parameters.",
  "ActionType": "Octopus.Script",
  "Version": 0,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "# Running outside octopus\r
param(\r
        [string]$serviceName,\r
        [string]$serviceType,\r
        [switch]$whatIf\r
     ) \r
\r
$ErrorActionPreference = \"Stop\" \r
\r
function Get-Param($Name, [switch]$Required, $Default) {\r
    $result = $null\r
\r
        if ($OctopusParameters -ne $null) {\r
            $result = $OctopusParameters[$Name]\r
        }\r
\r
    if ($result -eq $null) {\r
        $variable = Get-Variable $Name -EA SilentlyContinue   \r
            if ($variable -ne $null) {\r
                $result = $variable.Value\r
            }\r
    }\r
\r
    if ($result -eq $null -or $result -eq \"\") {\r
        if ($Required) {\r
            throw \"Missing parameter value $Name\"\r
        } else {\r
            $result = $Default\r
        }\r
    }\r
\r
    return $result\r
}\r
\r
& {\r
    param(\r
            [string]$serviceName,\r
            [string]$serviceType\r
         ) \r
\r
        Write-Host \"Setting $serviceName, $serviceType service autostart provider\"\r
\r
        try {\r
            Add-PSSnapin WebAdministration -ErrorAction SilentlyContinue\r
            Import-Module WebAdministration -ErrorAction SilentlyContinue\r
\r
            $oldValue = Get-WebConfiguration -filter /system.applicationHost/serviceAutoStartProviders/add | \r
                        Where-Object { $_.Name -eq $serviceName }\r
\r
            if ($oldValue -eq $null) {\r
                Write-Host \"Adding new service type provider $serviceName, $serviceType\"\r
                Add-WebConfiguration -filter /system.applicationHost/serviceAutoStartProviders -Value @{name=$serviceName; type=$serviceType}\r
            } \r
            elseif ($oldValue.Type -eq $serviceType) { \r
                Write-Host \"Service provider with the same name and type exists\"\r
            } else {\r
                $oldValueType = $oldValue.Type\r
                Write-Host \"Replacing service type from $oldValueType to $serviceType\"\r
                Set-WebConfiguration -filter \"/system.applicationHost/serviceAutoStartProviders/add[@name='$serviceName']\" -Value @{\"type\" = \"$serviceType\"}\r
            }\r
\r
            Write-Host \"Done\"\r
        } catch {\r
            Write-Host $_.Exception|format-list -force\r
            Write-Host \"There was a problem setting property\"    \r
        }\r
} `\r
(Get-Param 'serviceName' -Required) (Get-Param 'serviceType' -Required) \r
",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "serviceName",
      "Label": "Name of autostart service",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "serviceType",
      "Label": "Type which implements IProcessHostPreloadClient",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2015-10-23T01:06:20.789+00:00",
  "LastModifiedBy": "jmalczak",
  "$Meta": {
    "ExportedAt": "2015-10-23T02:23:21.661+00:00",
    "OctopusVersion": "2.6.5.1010",
    "Type": "ActionTemplate"
  },
  "Category": "iis"
}
