{
  "Id": "2d21abec-491a-4d85-9210-2784bc3dfeb8",
  "Name": "Azure Linux - Install Octopus Tentacle",
  "Description": "This step template will install the latest tentacle on an Azure hosted, Linux virtual machine. This will also open the firewall for inbound traffic on port 10933 on the NSG.
<hr />
*Note: Expects the Azure CLI and Powershell to be installed on the worker running this task*<br />
*Note: Requires dotnet core to be pre-installed on the target machine* <br />
*Note: Firewall ports will not be opened on the remote machine*",
  "ActionType": "Octopus.AzurePowerShell",
  "Version": 4,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Azure.AccountId": "#{installLinuxTentacle.AzureAccount}",
    "Octopus.Action.Script.ScriptBody": "$nsgName = $OctopusParameters[\"installLinuxTentacle.azNsgName\"]
$resourceGroup = $OctopusParameters[\"installLinuxTentacle.azRgName\"]
$nsgRulePriority = $OctopusParameters[\"installLinuxTentacle.azNsgRulePriority\"]
$vmName = $OctopusParameters[\"installLinuxTentacle.azVmName\"]
$serverUri = $OctopusParameters[\"instrallTentacle.octoServerUrl\"]
$apiKey = $OctopusParameters[\"installLinuxTentacle.octoApiKey\"]
$rolesRaw = $OctopusParameters[\"installLinuxTentacle.octopusRoles\"]
$enviroRaw = $OctopusParameters[\"installLinuxTentacle.octopusEnvironments\"]
$octoThumb = $OctopusParameters[\"installLinuxTentacle.octoServerThumb\"]
$comStyle = $OctopusParameters[\"installLinuxTentacle.tentacleType\"]
$hostname = $OctopusParameters[\"installLinuxTentacle.tentacleHostName\"]
$portNumber = $OctopusParameters[\"installLinuxTentacle.portNumber\"]

Write-Host \"Parsing Parameters\"

if([string]::IsNullOrEmpty($rolesRaw))
{
\tthrow \"At least one role must be defined\"
}

if([string]::IsNullOrEmpty($enviroRaw))
{
\tthrow \"At least one environment must be defined\"
}

$roles = \"\"
$rolesRaw -split \"`n\" | ForEach-Object { $roles += \"--role $_ \"}
$roles = $roles.TrimEnd(' ')

$environments = \"\"
$enviroRaw -split \"`n\" | ForEach-Object { $environments += \"--env $_ \"}
$environments = $environments.TrimEnd(' ')

if($comStyle -eq \"TentaclePassive\")
{
\tif([string]::IsNullOrEmpty($hostname))
    {
    \t$hostname = az vm show -d -g $resourceGroup -n $vmName --query publicIps -o tsv
        $hostname = $hostname.Trim(\"`n\")
    }

    $noListen = \"--port $portNumber --noListen `\"false`\"\"
    $comStyle += \" --publicHostName=`\"$hostname`\"\"
    $openFirewall = 'true'
}
else
{
\t$noListen = \"--noListen `\"true`\"\"
    $openFirewall = 'false'
}

if($openFirewall -eq 'true')
{
\tWrite-Host \"Creating NSG Rule\"
\taz network nsg rule create --name \"OctopusTentacle\" --nsg-name $nsgName --priority $nsgRulePriority --resource-group $resourceGroup --direction Inbound --destination-port-ranges $portNumber
}

Write-Verbose \"hostname: $hostname`noListen: $noListen\"

$remoteScript = @\"

printf '%s\
' \"Test case x failed\" >&2
exit 1

configFilePath=\"/etc/octopus/default/tentacle-default.config\"
appPath=\"/home/Octopus/Applications\"

# try curl
{
    curl -L https://octopus.com/downloads/latest/Linux_x64TarGz/OctopusTentacle --output /tmp/tentacle-linux_x64.tar.gz -fsS
} || {
    wget https://octopus.com/downloads/latest/Linux_x64TarGz/OctopusTentacle -O /tmp/tentacle-linux_x64.tar.gz -fsS
}

if [ ! -d \"/opt/octopus\" ]; then
  mkdir /opt/octopus
fi

tar xvzf /tmp/tentacle-linux_x64.tar.gz -C /opt/octopus
rm /tmp/tentacle-linux_x64.tar.gz

cd /opt/octopus/tentacle

sudo /opt/octopus/tentacle/Tentacle create-instance --config \"`$configFilePath\"
sudo chmod a+rwx `$configFilePath
/opt/octopus/tentacle/Tentacle new-certificate --if-blank
/opt/octopus/tentacle/Tentacle configure --port $portNumber --noListen False --reset-trust --app \"`$appPath\"
/opt/octopus/tentacle/Tentacle configure --trust $octoThumb
echo \"Registering the Tentacle $name with server $serverUri in environment $environments with role $roles\"
/opt/octopus/tentacle/Tentacle register-with --server \"$serverUri\" --apiKey \"$apikey\" --name \"$name\" $environments $roles --comms-style $comStyle --force
sudo /opt/octopus/tentacle/Tentacle service --install --start

\"@

Write-Host \"Installing tentacle on remote machine\"
$scriptGuid = (new-guid).guid
Set-Content -Value $remoteScript -Path \".\\$scriptGuid.ps1\"

$result = az vm run-command invoke --command-id RunShellScript --name $vmName -g $resourceGroup --scripts \"@script.ps1\"

$result

$msg = ($result | convertfrom-json).value[0].message

if($msg -match \"(?<=\\[stderr\\]).+\")
{
\tthrow $msg
}

remove-item \".\\$scriptGuid.ps1\"
"
  },
  "Parameters": [
    {
      "Id": "dea51842-271f-48fa-901e-243488049f97",
      "Name": "installLinuxTentacle.AzureAccount",
      "Label": "Azure Account",
      "HelpText": "Azure account with permissions to the virtual machine in which to install the tentacle on",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "AzureAccount"
      }
    },
    {
      "Id": "6a97548c-3b97-4a19-8b9a-45aa58ac62d9",
      "Name": "installLinuxTentacle.azRgName",
      "Label": "Azure Resource Group",
      "HelpText": "The name of the resource group housing the NSG and VM",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "d9efb017-65c0-4010-b09f-0a6a34fc009f",
      "Name": "installLinuxTentacle.azNsgName",
      "Label": "NSG Name",
      "HelpText": "The name of the azure network security group to create ",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "36c6d441-9fe8-4ea2-957a-2135aa9d1687",
      "Name": "installLinuxTentacle.azNsgRulePriority",
      "Label": "Azure NSG Rule Priority",
      "HelpText": "the priority to assign to the NSG rule created for the octopus tentacle. Defaults to 400",
      "DefaultValue": "400",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "e4358aec-2798-412a-bcd2-1c7e41a0728d",
      "Name": "installLinuxTentacle.azVmName",
      "Label": "VM Name",
      "HelpText": "The name of the virtual machine to target when ",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "8dbe0a29-4e0f-43f8-8ef2-ae23a2884e85",
      "Name": "installLinuxTentacle.octoServerThumb",
      "Label": "Server Thumbprint",
      "HelpText": "The Thumbprint of the octopus server",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "a0859551-6c84-45d1-af2b-c57becb4e8ef",
      "Name": "installLinuxTentacle.octoApiKey",
      "Label": "API Key",
      "HelpText": "The API key used to configure the tentacle.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "dd07815d-bfb7-43b9-90f8-21ec5a2d2953",
      "Name": "installLinuxTentacle.octopusRoles",
      "Label": "Roles",
      "HelpText": "Roles to assign to this tentacle installation. <br />
*Note: Each role should be on it's own line*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "d3ffb38e-7fcf-4547-be9a-6cd8e46f8e5e",
      "Name": "installLinuxTentacle.octopusEnvironments",
      "Label": "Environments",
      "HelpText": "Environments to assign this tentacle installation to.<br />
*Note: Each environment should be on its own line*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "15150827-7bd3-4146-a798-66344851f602",
      "Name": "installLinuxTentacle.octoServerUrl",
      "Label": "Server Url",
      "HelpText": "The server url to register the tentacle with.  Defaults to the base url",
      "DefaultValue": "#{if Octopus.Web.ServerUri}#{Octopus.Web.ServerUri}#{else}#{Octopus.Web.BaseUrl}#{/if}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "9bcd6bb5-2db3-453f-b4f6-6a78f3c39b59",
      "Name": "installLinuxTentacle.tentacleType",
      "Label": "Tentacle Type",
      "HelpText": "Select between a listening or polling tentacle",
      "DefaultValue": "TentaclePassive",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "TentaclePassive|Listening
TentacleActive|Polling"
      }
    },
    {
      "Id": "6bb98570-fe3e-4ab7-adfb-79ef7ce5c2ce",
      "Name": "installLinuxTentacle.tentacleHostName",
      "Label": "Tentacle Host Name",
      "HelpText": "The host name to register the listening tentacles with. Octopus deploy server uses this value to reach out to the vm.<br />
*Note: Leave blank to automatically use assigned public IP address.*",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "1ae37ac0-fc37-447c-941f-7b72ed32a647",
      "Name": "installLinuxTentacle.portNumber",
      "Label": "Port Number",
      "HelpText": "Port number used when installing and registering the tentacle.  This port is also opened when installing a listening tentacle",
      "DefaultValue": "10933",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2022-02-09T15:56:03.173Z",
    "OctopusVersion": "2021.3.12155",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "harrisonmeister",
  "Category": "azure"
}
