{
  "Id": "7ed93dfa-b137-4341-9c6c-84fa0565d865",
  "Name": "Create Database Login and User using SMO",
  "Description": "Requires SMO to be installed on the machine where this step will be run.",
  "ActionType": "Octopus.Script",
  "Version": 6,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SMO\") | out-null\r\n\r\ntry\r\n{    \r\n    $server = new-object ('Microsoft.SqlServer.Management.Smo.Server') $SqlServer\r\n    \r\n    $server.ConnectionContext.LoginSecure = $true \r\n\r\n    if ($server.Logins.Contains($LoginName))  \r\n    {\r\n        write-host \"Login $LoginName already exists\"   \r\n    }\r\n    else \r\n    {\r\n        write-host \"Login does not exist, creating\"\r\n        $login = New-Object -TypeName Microsoft.SqlServer.Management.Smo.Login -ArgumentList $SqlServer, $LoginName\r\n        $login.LoginType = [Microsoft.SqlServer.Management.Smo.LoginType]::WindowsUser\r\n        $login.PasswordExpirationEnabled = $false\r\n        $login.Create()\r\n        Write-Host(\"Login $LoginName created successfully.\")\r\n    }\r\n\r\n    if($server.Databases.Contains($SqlDatabase)) \r\n    {\r\n        $database = $server.Databases[$SqlDatabase]\r\n        \r\n        if (!$database.Users[$LoginName])\r\n        {\r\n            $dbUser = New-Object -TypeName Microsoft.SqlServer.Management.Smo.User -ArgumentList $database, $LoginName\r\n            $dbUser.Login = $LoginName\r\n            $dbUser.Create()\r\n            Write-Host(\"User $dbUser created successfully.\")\r\n\r\n            if($SqlRole -ne $null) \r\n            {\r\n                #assign database role for a new user\r\n                $dbrole = $database.Roles[$SqlRole]\r\n                $dbrole.AddMember($LoginName)\r\n                $dbrole.Alter()\r\n                Write-Host(\"User $LoginName successfully added to $SqlRole role.\")\r\n            }\r\n        }\r\n    }\r\n    else \r\n    {\r\n        write-host \"Database $SqlDatabase does not exist\"\r\n    }\r\n}\r\ncatch\r\n{    \r\n    $error[0] | format-list -force\r\n    #Exit 1\r\n}",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "SqlServer",
      "Label": "Database Server Name",
      "HelpText": "Name of the to create the login for.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "SqlDatabase",
      "Label": "Database Name",
      "HelpText": "Name of the database. The created Login and User will get the role dbowner by defaultfor this database.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "LoginName",
      "Label": "Windows Login Name",
      "HelpText": "The login name to create a login and user in the database for. In our projects we use integrated security - you should too.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "SqlRole",
      "Label": "Database Role Name",
      "HelpText": "We default to db_owner, you might want to change this to suit your needs.",
      "DefaultValue": "db_owner",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2015-06-05T08:54:47.852+00:00",
  "LastModifiedBy": "lavaeater",
  "$Meta": {
    "ExportedAt": "2015-06-05T08:54:50.228+00:00",
    "OctopusVersion": "2.6.5.1010",
    "Type": "ActionTemplate"
  },
  "Category": "sql"
}