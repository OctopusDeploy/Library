{
  "Id": "5c08170d-e919-4afe-9da3-7616c797d42b",
  "Name": "Git - Pull (HTTPS)",
  "Description": "Gets the latest source for a Git repository.",
  "ActionType": "Octopus.Script",
  "Version": 8,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "[System.Reflection.Assembly]::LoadWithPartialName(\"System.Web\")
function Format-UriWithCredentials($url, $username, $password) {
    $uri = New-Object \"System.Uri\" $url
    
    $url = $uri.Scheme + \"://\"
    if (-not [string]::IsNullOrEmpty($username)) {
        $url = $url + [System.Web.HttpUtility]::UrlEncode($username)
        
        if (-not [string]::IsNullOrEmpty($password)) {
            $url = $url + \":\" + [System.Web.HttpUtility]::UrlEncode($password)  
        }
        
        $url = $url + \"@\"    
    } elseif (-not [string]::IsNullOrEmpty($uri.UserInfo)) {
        $url = $uri.UserInfo + \"@\"
    }

    $url = $url + $uri.Host + $uri.PathAndQuery
    return $url
}

function Test-LastExit($cmd) {
    if ($LastExitCode -ne 0) {
        Write-Host \"##octopus[stderr-error]\"
        write-error \"$cmd failed with exit code: $LastExitCode\"
    }
}

$tempDirectoryPath = $OctopusParameters['Octopus.Tentacle.Agent.ApplicationDirectoryPath']
$tempDirectoryPath = join-path $tempDirectoryPath \"GitPull\" 
$tempDirectoryPath = join-path $tempDirectoryPath $OctopusParameters['Octopus.Environment.Name']
$tempDirectoryPath = join-path $tempDirectoryPath $OctopusParameters['Octopus.Project.Name']
$tempDirectoryPath = join-path $tempDirectoryPath $OctopusParameters['Octopus.Action.Name']

Write-Host \"Repository will be cloned to: $tempDirectoryPath\"

# Step 1: Ensure we have the latest version of the repository
mkdir $tempDirectoryPath -ErrorAction SilentlyContinue
cd $tempDirectoryPath

Write-Host \"##octopus[stderr-progress]\"

git init
Test-LastExit \"git init\"

$url = Format-UriWithCredentials -url $OctopusParameters['GitHttpsUrl'] -username $OctopusParameters['Username'] -password $OctopusParameters['Password']

$branch = $OctopusParameters['GitHttpsBranchName']

# We might have already run before, so we need to reset the origin
git remote remove origin
git remote add origin $url
Test-LastExit \"git remote add origin\"

Write-Host \"Fetching remote repository\"
git fetch origin
Test-LastExit \"git fetch origin\"

Write-Host \"Check out branch $branch\"
git reset --hard \"origin/$branch\"
Test-LastExit \"git reset --hard\"

Set-OctopusVariable -name \"RepositoryDirectory\" -value $tempDirectoryPath
Write-Verbose \"Directory path '$tempDirectoryPath' available in 'RepositoryDirectory' output variable\"
Write-Host \"Repository successfully cloned to: $tempDirectoryPath\"",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "SensitiveProperties": {},
  "Parameters": [
    {
      "Name": "GitHttpsUrl",
      "Label": "Clone URL",
      "HelpText": "'https://' URL to the repository that will be cloned from.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "Username",
      "Label": "Username",
      "HelpText": "Username to use when authenticating with the HTTPS server.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "Password",
      "Label": "Password",
      "HelpText": "Password to use when authenticating with the HTTPS server. You should create a sensitive variable in your project variables, and then bind this value.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "GitHttpsBranchName",
      "Label": "Branch name",
      "HelpText": "Name of the Git branch to clone",
      "DefaultValue": "master",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedOn": "2021-07-26T16:50:00.000+00:00",
  "LastModifiedBy": "bobjwalker",
  "$Meta": {
    "ExportedAt": "2014-05-16T00:23:33.282+00:00",
    "OctopusVersion": "2.4.4.43",
    "Type": "ActionTemplate"
  },
  "Category": "git"
}
