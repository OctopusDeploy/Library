{
  "Id": "35450be7-a9a2-415f-82b4-6503ca148f22",
  "Name": "Mulesoft - Deploy to Cloudhub",
  "Description": "Deploys a Mulesoft API to Cloudhub",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [
    {
      "Id": "a8d60939-169c-4026-a9b3-3789b2bb0152",
      "Name": "Mulesoft.Asset",
      "PackageId": null,
      "FeedId": null,
      "AcquisitionLocation": "Server",
      "Properties": {
        "Extract": "False",
        "SelectionMode": "deferred",
        "PackageParameterName": "Mulesoft.Asset.File",
        "Purpose": ""
      }
    }
  ],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "Function Get-NpmExecutable
{
\t# Define parameters
    param (
    \t$NodeVersion = \"18.16.0\"
    )
       
    # Declare local variables
    $npmDownloadUrl = \"https://nodejs.org/dist/v$NodeVersion/\"
    $downloadFileName = [string]::Empty
    $npmExecutable = [string]::Empty
    
    # Assign download url
    if ($IsWindows)
    {
    \t$downloadFileName += \"node-v$($NodeVersion)-win-x64.zip\"
    }
    else
    {
    \t$downloadFileName += \"node-v$($NodeVersion)-linux-x64.tar.xz\"
    }

\t# Create folder for npm
    if ((Test-Path -Path \"$PWD/npm\") -eq $false)
    {
    \tNew-Item -Path \"$PWD/npm\" -ItemType \"Directory\"
    }
    
    # Download npm binary
    Write-Host \"Downloading $(($npmDownloadUrl + $downloadFileName)) ...\"
    Invoke-WebRequest -Uri ($npmDownloadUrl + $downloadFileName) -Outfile \"$PWD/$downloadFileName\"
    
    Write-Output \"Extracting $downloadFileName ... \"
    
    if ($IsWindows)
    {
      # Extract
      Expand-Archive -Path \"$PWD/$downloadFileName\" -DestinationPath \"$PWD/npm\"
      
      # Find the executable
      $npmExecutable = Get-ChildItem -Path \"$PWD/npm/$($downloadFileName.Replace('.zip', ''))\" | Where-Object {$_.Name -eq \"npm.cmd\"}
    }
    
    if ($IsLinux)
    {
      # Extract archive
      tar -xf \"$PWD/$downloadFileName\" --directory \"$PWD/npm\"
      
      # Find the executable
      $npmExecutable = Get-ChildItem -Path \"$PWD/npm/$($downloadFileName.Replace('.tar.xz', ''))/bin\" | Where-Object {$_.Name -eq \"npm\"}      
    }
    
    # Insert location of executable into PATH environment variable so it can be called from anywhere
    $env:PATH = \"$($npmExecutable.Directory)$([IO.Path]::PathSeparator)\" + $env:PATH
}

Function Install-MulesoftCLI
{
\t# Define parameters
    param (
    \t$CLIVersion = \"4\"
    )
\t
    # Run npm command to install pluguin
    Write-Host \"Installing anypoint-cli-v$($CLIVersion) node module ...\"
    
    # Adjust install command based on operating system
    if ($IsWindows)
    {
    \t& npm install -g \"anypoint-cli-v$($CLIVersion)\" \"2>&1\"
    }
    else
    {
    \t& npm install -g \"anypoint-cli-v$($CLIVersion)\" 2>&1
    }
    
\t# Check exit code
\tif ($lastExitCode -ne 0)
\t{
\t\t# Fail the step
    \tWrite-Error \"Installation failed!\"
\t}
}

Function Deploy-MulesoftApplication
{
\t# Define parameters
    param (
    \t$AssetFilePath,
        $ApplicationName,
        $RuntimeVersion,
        $NumberOfWorkers,
        $WorkerSize,
        $Region
    )
    
    # Replace path seperator
    if ($AssetFilePath.Contains(\"\\\"))
    {
    \t# Replace them with forward slash
        $AssetFilePath = $AssetFilePath.Replace(\"\\\", \"/\")
    }
    
    # Check to see if application already exists
    $applicationList = (anypoint-cli-v4 runtime-mgr:cloudhub-application:list --output json | ConvertFrom-JSON)
    $deployResults = $null
    
    if ($null -eq ($applicationList | Where-Object {$_.domain -eq $ApplicationName}))
    {
    \t# Deploy the application to cloud hub
        Write-Host \"Deploying new application ...\"
    \t$deployResults = anypoint-cli-v4 runtime-mgr:cloudhub-application:deploy $ApplicationName $AssetFilePath --output json --runtime $RuntimeVersion --workers $NumberOfWorkers --workerSize $WorkerSize --region $Region
    }
    else
    {
    \t# Update the application
        Write-Host \"Updating existing application ...\"
        $deployResults = anypoint-cli-v4 runtime-mgr:cloudhub-application:modify $ApplicationName $AssetFilePath --output json --runtime $RuntimeVersion --workers $NumberOfWorkers --workerSize $WorkerSize --region $Region
    }
    
    # Display results 
    Write-Host \"Results:\"
    $deployResults
}

# Check to see if $IsWindows is available
if ($null -eq $IsWindows) {
    Write-Host \"Determining Operating System...\"
    $IsWindows = ([System.Environment]::OSVersion.Platform -eq \"Win32NT\")
    $IsLinux = ([System.Environment]::OSVersion.Platform -eq \"Unix\")
}

if ($IsWindows)
{
\t# Disable progress bar for faster installation
    $ProgressPreference = 'SilentlyContinue'
}

# Fix ANSI Color on PWSH Core issues when displaying objects
if ($PSEdition -eq \"Core\") {
    $PSStyle.OutputRendering = \"PlainText\"
}

# Get parameters
$downloadUtils = [System.Convert]::ToBoolean(\"$($OctopusParameters['Mulesoft.Download'])\")

# Check to see if we need to download utilities
if ($downloadUtils)
{
\tGet-NpmExecutable -NodeVersion $OctopusParameters['Mulesoft.Node.CLI.Version']
\tInstall-MulesoftCLI -CLIVersion $OctopusParameters['Mulesoft.Anypoint.CLI.Version']
}

# Set environment variables
$env:ANYPOINT_CLIENT_ID = $OctopusParameters['Mulesoft.Anypoint.Client.Id']
$env:ANYPOINT_CLIENT_SECRET = $OctopusParameters['Mulesoft.Anypoint.Client.Secret']
$env:ANYPOINT_ORG = $OctopusParameters['Mulesoft.Anypoint.Organization.Id']
$env:ANYPOINT_ENV = $OctopusParameters['Mulesoft.Anypoint.Environment']

# Set global variables
$mulesoftOrganizationId = $OctopusParameters['Mulesoft.Anypoint.Organization.Id']
$mulesoftAssetVersionNumber = $OctopusParameters['Octopus.Action.Package[Mulesoft.Asset].PackageVersion']
$mulesoftAssetArtifactId = $OctopusParameters['Octopus.Action.Package[Mulesoft.Asset].PackageId']
$mulesoftApplicationName = $OctopusParameters['Mulesoft.Anypoint.Application.Name'].ToLower()
$mulesoftRuntimeVersion = $OctopusParameters['Mulesoft.Anypoint.Runtime.Version']
$mulesoftNumberOfWorkers = $OctopusParameters['Mulesfot.Anypoint.Worker.Count']
$mulesoftWorkerSize = $OctopusParameters['Mulesoft.Anypoint.Worker.Size']
$mulesoftRegion = $OctopusParameters['Mulesoft.Anypoint.Region']

# Check optional parameters
if ([string]::IsNullOrWhitespace($mulesoftNumberOfWorkers))
{
\t$mulesoftNumberOfWorkers = \"1\"
}

if ([string]::IsNullOrWhitespace($mulesoftWorkerSize))
{
\t$mulesoftWorkerSize = \"1\"
}

# Display variable values
Write-Host \"================== Deploying to CloudHub with the following options ==================\"
Write-Host \"Organization Id/Group Id: $mulesoftOrganizationId\"
Write-Host \"Artifact Id: $mulesoftAssetArtifactId\"
Write-Host \"Version number: $mulesoftAssetVersionNumber\"
Write-Host \"Application Name: $mulesoftApplicationname\"
Write-Host \"Environment: $($env:ANYPOINT_ENV)\"
Write-Host \"Runtime version: $mulesoftRuntimeVersion\"
Write-Host \"Number of workers: $mulesoftNumberOfWorkers\"
Write-Host \"Worker size: $mulesoftWorkerSize\"
Write-Host \"Region: $mulesoftRegion\"
Write-Host \"=======================================================================================\"

# Get file properties
$mulesoftApplicationFileExtension = [System.IO.Path]::GetExtension(\"$PWD/$($OctopusParameters['Octopus.Action.Package[Mulesoft.Asset].PackageFileName'])\")

# Rename the file to the original
Rename-Item -Path \"$PWD/$($OctopusParameters['Octopus.Action.Package[Mulesoft.Asset].PackageFileName'])\" -NewName \"$($mulesoftAssetArtifactId).$($mulesoftAssetVersionNumber)$mulesoftApplicationFileExtension\"
$mulesoftApplicationFilePath = \"$PWD/$($mulesoftAssetArtifactId).$($mulesoftAssetVersionNumber)$mulesoftApplicationFileExtension\"

# Upload asset to exchange
Deploy-MulesoftApplication -AssetFilePath $mulesoftApplicationFilePath -ApplicationName $mulesoftApplicationName -Region $mulesoftRegion -RuntimeVersion $mulesoftRuntimeVersion -NumberOfWorkers $mulesoftNumberOfWorkers -Workersize $mulesoftWorkerSize

"
  },
  "Parameters": [
    {
      "Id": "e73b1ba3-df1f-490f-98d3-e564f6c1904a",
      "Name": "Mulesoft.Anypoint.Organization.Id",
      "Label": "Anypoint OrganizationID",
      "HelpText": "The Organization ID of your Anypoint account.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "680c0b8c-a219-466a-840d-a5828247d2e8",
      "Name": "Mulesoft.Anypoint.Client.Id",
      "Label": "Anypoint Client ID",
      "HelpText": "Client ID of the Anypoint user used for deployment.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "f71f9285-acee-4461-83fc-6f281c78ee87",
      "Name": "Mulesoft.Anypoint.Client.Secret",
      "Label": "Anypoint Client Secret",
      "HelpText": "Client Secret of the Anypoint user used for deployment.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "4a7f78d5-3e68-4d04-aa88-327903d86d5c",
      "Name": "Mulesoft.Anypoint.Environment",
      "Label": "Anypoint Environment",
      "HelpText": "Environment name to target.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "669bd6f1-a55e-4017-bc41-7008a166727c",
      "Name": "Mulesoft.Anypoint.Application.Name",
      "Label": "Anypoint Application Name",
      "HelpText": "Name of the deployed application.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "3ad06081-5a16-4fff-8d6d-dd2e9b5ea435",
      "Name": "Mulesoft.Asset.File",
      "Label": "Mulesoft Asset File",
      "HelpText": "Select the package containing the Mulesoft API to upload to Exchange.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Package"
      }
    },
    {
      "Id": "291892c6-9fb0-4fc6-a3a5-d10bcdf70338",
      "Name": "Mulesoft.Anypoint.Runtime.Version",
      "Label": "Runtime version",
      "HelpText": "The version of the runtime to use for your application.",
      "DefaultValue": "4.4.0",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "d636b68a-dd56-4201-b2af-bb8faecc17ea",
      "Name": "Mulesfot.Anypoint.Worker.Count",
      "Label": "Number of Workers",
      "HelpText": "(Optional) \t
Number of workers. (This value is '1' by default)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "ace7c127-6adf-4df3-8e13-e43d596490f4",
      "Name": "Mulesoft.Anypoint.Worker.Size",
      "Label": "Worker Size",
      "HelpText": "(Optional) Size of the workers in vCores. (This value is '1' by default)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "a5aa6973-a64a-479e-a080-7fa684f00d45",
      "Name": "Mulesoft.Anypoint.Region",
      "Label": "Region",
      "HelpText": "Name of the region to deploy to.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "7f527d06-c329-4883-a5cf-15f233fbe319",
      "Name": "Mulesoft.Anypoint.CLI.AdditionalArguments",
      "Label": "Additional CLI arguments",
      "HelpText": "A comma delimited list of additional arguments to add to the CLI.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "ada95ba7-64d4-4b0e-a287-b2dd6fac5718",
      "Name": "Mulesoft.Node.CLI.Version",
      "Label": "NodeJS version",
      "HelpText": "Use to specify which version of the NodeJS CLI to use when choosing the Download Node option",
      "DefaultValue": "18.16.0",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "9b34443c-bd76-4aa4-b036-10d930d619eb",
      "Name": "Mulesoft.Anypoint.CLI.Version",
      "Label": "Anypoint CLI Version",
      "HelpText": "Specify the version of the CLI being used.",
      "DefaultValue": "4",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "aa635c7b-bedb-4000-95a0-3c399721ce2b",
      "Name": "Mulesoft.Download",
      "Label": "Download NodeJS and Anypoint CLI?",
      "HelpText": "Tick the box to dynamically download the NodeJS and Anypoint CLI utilities to deploy.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "StepPackageId": "Octopus.Script",
  "$Meta": {
    "ExportedAt": "2023-07-20T17:36:01.897Z",
    "OctopusVersion": "2023.2.12998",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "twerthi",
  "Category": "mulesoft"
}
