{
  "Id": "54b22700-3217-48ac-8749-e4a31b424834",
  "Name": "Save Octopus Output Variable",
  "Description": "Saves an [output variable](https://octopus.com/docs/deploying-applications/variables/output-variables) to the given project / library variable set",
  "ActionType": "Octopus.Script",
  "Version": 5,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "true",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'

$StepTemplate_BaseUrl = $OctopusParameters['#{if Octopus.Web.ServerUri}Octopus.Web.ServerUri#{else}Octopus.Web.BaseUrl#{/if}'].Trim('/')
if ([string]::IsNullOrWhiteSpace($StepTemplate_ApiKey)) {
    throw \"The step parameter 'API Key' was not found. This step requires an API Key to function, please provide one and try again.\"
}

function Invoke-OctopusApi {
    param(
        [Parameter(Position = 0, Mandatory)]$Uri,
        [ValidateSet(\"Get\", \"Put\")]$Method = 'Get',
        $Body
    )
    $requestParameters = @{
        Uri = ('{0}/{1}' -f $StepTemplate_BaseUrl, $Uri.TrimStart('/'))
        Method = $Method
        Headers = @{ \"X-Octopus-ApiKey\" = $StepTemplate_ApiKey }
        UseBasicParsing = $true
    }
    if ($null -ne $Body) { $requestParameters.Add('Body', ($Body | ConvertTo-Json -Depth 10)) }
    Write-Verbose \"$($Method.ToUpperInvariant()) $($requestParameters.Uri)\"   
    Invoke-WebRequest @requestParameters | % Content | ConvertFrom-Json | Write-Output
}

function Test-SpacesApi {
\tWrite-Verbose \"Checking API compatibility\";
\t$rootDocument = Invoke-OctopusApi 'api/';
    if($rootDocument.Links -ne $null -and $rootDocument.Links.Spaces -ne $null) {
    \tWrite-Verbose \"Spaces API found\"
    \treturn $true;
    }
    Write-Verbose \"Pre-spaces API found\"
    return $false;
}

if(Test-SpacesApi) {
\t$spaceId = $OctopusParameters['Octopus.Space.Id'];
    if([string]::IsNullOrWhiteSpace($spaceId)) {
        throw \"This step needs to be run in a context that provides a value for the 'Octopus.Space.Id' system variable. In this case, we received a blank value, which isn't expected - please reach out to our support team at https://help.octopus.com if you encounter this error.\";
    }
\t$baseApiUrl = \"api/$spaceId\" ;
} else {
\t$baseApiUrl = \"api\" ;
}

function Get-OctopusSetting {
    param([Parameter(Position = 0, Mandatory)][string]$Name, [Parameter(Position = 1, Mandatory)]$DefaultValue)
    $formattedName = 'Octopus.Action.{0}' -f $Name
    if ($OctopusParameters.ContainsKey($formattedName)) {
        $value = $OctopusParameters[$formattedName]
        if ($DefaultValue -is [bool]) { return ([System.Convert]::ToBoolean($value)) }
        if ($DefaultValue -is [array] -or $DefaultValue -is [hashtable] -or $DefaultValue -is [pscustomobject]) { return (ConvertFrom-Json -InputObject $value) }
        return $value
    }
    else { return $DefaultValue }
}

$outputVariableKey = \"Octopus.Action[${StepTemplate_DeploymentStep}].Output.${StepTemplate_VariableName}\"
if (!$OctopusParameters.ContainsKey($outputVariableKey)) {
    throw \"Variable '$StepTemplate_VariableName' has not been output from '$StepTemplate_DeploymentStep'\"
}
$isSensitive = [System.Convert]::ToBoolean($StepTemplate_IsSensitive)
$variableType = if ($isSensitive) { \"Sensitive\" } else { \"String\" }

$variableValue = $OctopusParameters[$outputVariableKey]
Write-Host \"Name: $StepTemplate_VariableName\"
Write-Host \"Type: $variableType\"
Write-Host \"Value: $(if ($isSensitive) { \"********\" } else { $variableValue })\"
Write-Host ' '

Write-Host \"Retrieving $StepTemplate_VariableSetType variable set...\"
if ($StepTemplate_VariableSetType -eq 'project') {
    $variableSet = Invoke-OctopusApi \"$baseApiUrl/projects/all\" | ? Name -eq $StepTemplate_VariableSetName | % { Invoke-OctopusApi $_.Links.Variables }
}
if ($StepTemplate_VariableSetType -eq 'library') {
    $variableSet = Invoke-OctopusApi \"$baseApiUrl/libraryvariablesets/all?ContentType=Variables\" | ? Name -eq $StepTemplate_VariableSetName | % { Invoke-OctopusApi $_.Links.Variables }
}
if ($null -eq $variableSet) {
    throw \"Unable to find $StepTemplate_VariableSetType variable set '$StepTemplate_VariableSetName'\"
}

$variableExists = $false
$variableSet.Variables | ? Name -eq $StepTemplate_VariableName | % {
    Write-Host \"Updating existing variable...\"
    Write-Verbose \"Existing value: $(if ($isSensitive) { \"********\" } else { $_.Value })\"
    $_.Value = $variableValue
    $_.Type = $variableType
    $_.IsSensitive = $isSensitive
    $_.Scope = Get-OctopusSetting Scope $_.Scope
    $variableExists = $true
}
if (!$variableExists) {
    Write-Host \"Creating new variable...\"
    $variableSet.Variables += @{
        Name = $StepTemplate_VariableName
        Value = $variableValue
        Type = $variableType
        IsSensitive = $isSensitive
        Scope = (Get-OctopusSetting Scope @{})
    }
}

Write-Host \"Saving updated variable set...\"
Invoke-OctopusApi $variableSet.Links.Self -Method Put -Body $variableSet | Out-Null",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "41e164af-94b1-42ac-8462-3e1a6ba49bbb",
      "Name": "StepTemplate_ApiKey",
      "Label": "API Key",
      "HelpText": "Provide an Octopus API Key with appropriate permissions to save the variable",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      },
      "Links": {}
    },
    {
      "Id": "ceddb0a2-621a-4cce-94e1-42ad1bf4ba72",
      "Name": "StepTemplate_DeploymentStep",
      "Label": "Deployment Step",
      "HelpText": "Select the step with the [output variable](https://octopus.com/docs/deploying-applications/variables/output-variables)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      },
      "Links": {}
    },
    {
      "Id": "fdd47428-d7ce-4f8d-b73b-e4d513d1aea8",
      "Name": "StepTemplate_VariableName",
      "Label": "Variable Name",
      "HelpText": "Name of the [variable used when it was set](https://octopus.com/docs/deploying-applications/variables/output-variables#Outputvariables-Settingoutputvariablesusingscripts)

_Note: The same name will be given to the saved variable_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "7a81c569-063f-41cb-ae61-1c4ebb67293a",
      "Name": "StepTemplate_VariableSetType",
      "Label": "Variable Set Type",
      "HelpText": "If the output variable is being saved to a project or [library variable set](https://octopus.com/docs/deploying-applications/variables/library-variable-sets)",
      "DefaultValue": "project",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "project|Project Variable
library|Library Variable Set"
      },
      "Links": {}
    },
    {
      "Id": "09e61027-ab16-4171-80c7-c7656f68833a",
      "Name": "StepTemplate_VariableSetName",
      "Label": "Variable Set Name",
      "HelpText": "Name of the project or [library](https://octopus.com/docs/deploying-applications/variables/library-variable-sets) variable set where the output variable should be saved",
      "DefaultValue": "#{Octopus.Project.Name}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "6e3cf177-1dcc-4b7c-9d24-ec7805167cef",
      "Name": "StepTemplate_IsSensitive",
      "Label": "Is Sensitive?",
      "HelpText": "If the variable should be marked as [sensitive](https://octopus.com/docs/deploying-applications/variables/sensitive-variables) and the value masked from logs",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      },
      "Links": {}
    }
  ],
  "LastModifiedBy": "harrisonmeister",
  "$Meta": {
    "ExportedAt": "2021-10-21T15:24:33.519Z",
    "OctopusVersion": "2021.2.7706",
    "Type": "ActionTemplate"
  },
  "Category": "octopus"
}
