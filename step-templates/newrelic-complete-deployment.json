{
  "Id": "7c88ea1e-de71-452d-be7e-b99dda397ba7",
  "Name": "New Relic - Complete Deployment",
  "Description": "Notifies [New Relic](https://newrelic.com) of a deployment.\nSends the revision/version number, deployer, etc from the Octopus deployment.",
  "ActionType": "Octopus.Script",
  "Version": 27,
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "Add-Type -AssemblyName System.Web\n\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Net.SecurityProtocolType]::Tls12\n\n$apiKey = $OctopusParameters['ApiKey']\n$user = $OctopusParameters['User']\n$applicationName = $OctopusParameters['ApplicationName']\n$checkInterval = $OctopusParameters['CheckInterval']\n$maxChecks = $OctopusParameters['MaxChecks']\n\n#https://octopus.com/docs/deployment-process/variables/system-variables\n$releaseNumber = $OctopusParameters['Octopus.Release.Number']\n$releaseNotes = $OctopusParameters['Octopus.Release.Notes']\n$machineName = $OctopusParameters['Octopus.Machine.Name']\n$projectName = $OctopusParameters['Octopus.Project.Name']\n$deploymentLink = $OctopusParameters['Octopus.Web.ServerUri'] + $OctopusParameters['Octopus.Web.DeploymentLink']\n\nfunction GetNewRelicApplication\n{\n    param([string]$applicationName, [string]$apiKey, [int]$maxChecks, [int]$checkInterval)\n    $urlEncodedApplicationName = [System.Web.HttpUtility]::UrlEncode($applicationName)\n    $applicationResponse = Invoke-RestMethod -Method Get -Uri \"https://api.newrelic.com/v2/applications.json?filter[name]=$urlEncodedApplicationName\" -Headers @{\"Api-Key\"=$apiKey}\n    $targetApplication = $applicationResponse.applications | Select-Object -First 1\n\n\n    if ($targetApplication -ne $null)\n    {\n        return $targetApplication\n    }\n\n    $checkCount = 0\n\n    Write-Host \"Waiting for newrelic application named $applicationName to show up\"\n    Write-Host \"Maximum Checks: $maxChecks\"\n    Write-Host \"Check Interval: $checkInterval\"\n\n    while ($targetApplication -eq $null -and $checkCount -le $maxChecks)\n    {\t\n\t    $checkCount += 1\n\t\n\t    Write-Host \"Waiting for $checkInterval seconds for newrelic application named $applicationName to show up\"\n\t    Start-Sleep -Seconds $checkInterval\n\t\n\t    if ($checkCount -le $maxChecks)\n\t    {\n\t\t    Write-Host \"$checkCount/$maxChecks Attempts\"\n\t    }\n\t\n\t    $applicationResponse = Invoke-RestMethod -Method Get -Uri \"https://api.newrelic.com/v2/applications.json?filter[name]=$urlEncodedApplicationName\" -Headers @{\"Api-Key\"=$apiKey}\n        $targetApplication = $applicationResponse.applications | Select-Object -First 1\n    }\n\n    return $targetApplication\n}\n\n\n$application = GetNewRelicApplication -applicationName $applicationName -apiKey $apiKey -maxChecks $maxChecks -checkInterval $checkInterval\n\nif ($application -eq $null)\n{\n    Write-Error -Message \"Newrelic app not found.  This usually means check your application is not running or configured correctly to report\"\n\tExit 1\n}\n\nWrite-Host \"Newrelic app found. Sending a deployment marker\"\n\n\n$deploymentmarkerPayload = @\"\n{\n    \"deployment\": {\n    \"revision\": \"$($releaseNumber)\",\n    \"changelog\": \"$($releaseNotes)\",\n    \"description\": \"Octopus deployment of $($projectName) to $($machineName). ($($deploymentLink))\",\n    \"user\": \"$($user)\"\n    }\n}\n\"@\n\nWrite-Host $deploymentmarkerPayload\n\nInvoke-WebRequest -Uri \"https://api.newrelic.com/v2/applications/$($application.id)/deployments.json\" -Method POST -Headers @{'Api-Key'=$apiKey} -ContentType 'application/json' -Body $deploymentmarkerPayload",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "caf3f015-671f-4600-bce0-ebcc7d5957fe",
      "Name": "nrcp_ApiKey",
      "Label": "Api Key",
      "HelpText": "Your New Relic API key.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "58107827-abba-4c14-a176-80f6fcae02ac",
      "Name": "nrcp_ApplicationName",
      "Label": "Application Name",
      "HelpText": "The Name of the application in New Relic.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "719ab099-a361-4a58-ad34-b1d4acb70dd2",
      "Name": "nrcp_User",
      "Label": "User (optional)",
      "HelpText": "The name of the user/process that triggered this deployment.",
      "DefaultValue": "#{Octopus.Deployment.CreatedBy.Username}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "1e9856d3-0a0b-413f-a852-473b855fc9f8",
      "Name": "nrcp_CheckInterval",
      "Label": "Check Interval",
      "HelpText": "The number of seconds to wait before re-checking for the New Relic application.",
      "DefaultValue": "10",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "675b20bd-bc91-43e0-a1f7-922ce8eb3a1f",
      "Name": "nrcp_MaxChecks",
      "Label": "Maximum Checks",
      "HelpText": "The maximum number of times to check for the existance of the New Relic application before giving up.",
      "DefaultValue": "6",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
  "LastModifiedOn": "2021-11-13T12:00:00.000+00:00",
  "LastModifiedBy": "tragiccode",
  "$Meta": {
    "ExportedAt": "2020-04-16T09:18:09.541Z",
    "OctopusVersion": "2019.12.0",
    "Type": "ActionTemplate"
  },
  "Category": "newrelic"
}
