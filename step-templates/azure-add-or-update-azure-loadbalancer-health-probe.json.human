{
  "Id": "59528692-2107-45eb-9fde-55e7329822a9",
  "Name": "Add or update Azure Load Balancer Health Probe",
  "Description": null,
  "ActionType": "Octopus.AzurePowerShell",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Azure.AccountId": "#{Azure.LoadBalancerCreateHealthProbe.Account}",
    "Octopus.Action.Script.ScriptBody": "

Write-Output \"Resource group name: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ResourceGroupName'])\"
Write-Output \"Load balancer name : $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.LoadBalancerName'])\"
Write-Output \"Health probe name: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'])\"

Write-Output \"Protocol: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'])\"
Write-Output \"Path: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Path'])\"
Write-Output \"Port: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Port'])\"
Write-Output \"Interval: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Interval'])\"
Write-Output \"Probe count: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ProbeCount'])\"


$loadBalancer = Get-AzureRmLoadBalancer -ResourceGroupName $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ResourceGroupName'] -name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.LoadBalancerName']
$healthProbe = Get-AzureRmLoadBalancerProbeConfig -name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'] -LoadBalancer $loadBalancer  -ErrorAction:SilentlyContinue

if($healthProbe -eq $null)
{
\t#Create healthProbe
\tWrite-Output \"Creating healt probe: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName']) on load balancer: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.LoadBalancerName']) in resource group: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ResourceGroupName'])\"
\t
\tif($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] -eq \"http\")
\t{
\t\t#path only used in http
\t\t$loadBalancer  | Add-AzureRmLoadBalancerProbeConfig -Name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'] `
\t\t\t-RequestPath  $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Path'] `
\t\t\t-Protocol $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] `
\t\t\t-Port $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Port']  `
\t\t\t-IntervalInSeconds $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Interval'] `
\t\t\t-ProbeCount $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ProbeCount'] 
\t}
\telse
\t{
\t\t# Path is not part of tcp config
\t\t$loadBalancer  | Add-AzureRmLoadBalancerProbeConfig -Name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'] `
\t\t\t-Protocol $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] `
\t\t\t-Port $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Port']  `
\t\t\t-IntervalInSeconds $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Interval'] `
\t\t\t-ProbeCount $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ProbeCount']
\t}
}
else
{
\t#Update healthProbe
\tWrite-Output \"Updating healt probe: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName']) on load balancer: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.LoadBalancerName']) in resource group: $($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ResourceGroupName'])\"
\t
\tif($OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] -eq \"http\")
\t{
\t\t#path only used in http
\t\t$loadBalancer  | Set-AzureRmLoadBalancerProbeConfig -Name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'] `
\t\t\t-RequestPath  $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Path'] `
\t\t\t-Protocol $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] `
\t\t\t-Port $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Port']  `
\t\t\t-IntervalInSeconds $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Interval'] `
\t\t\t-ProbeCount $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ProbeCount'] 
\t}
\telse
\t{
\t\t# Path is not part of tcp config
\t\t$loadBalancer  | Set-AzureRmLoadBalancerProbeConfig -Name $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.HealthProbeName'] `
\t\t\t-Protocol $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Protocol'] `
\t\t\t-Port $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Port']  `
\t\t\t-IntervalInSeconds $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.Interval'] `
\t\t\t-ProbeCount $OctopusParameters['Azure.LoadBalancerCreateHealthProbe.ProbeCount']
\t}
}

Write-Host \"Save changes to loadbalancer\"
Set-AzureRmLoadBalancer -LoadBalancer $loadBalancer"
  },
  "Parameters": [
    {
      "Id": "e720d0e8-14d7-47cc-96a9-b074aa2dcf14",
      "Name": "Azure.LoadBalancerCreateHealthProbe.Account",
      "Label": "Account",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "AzureAccount"
      },
      "Links": {}
    },
    {
      "Id": "87a93c04-2395-4a73-9999-6b6dacc546fe",
      "Name": "Azure.LoadBalancerCreateHealthProbe.ResourceGroupName",
      "Label": "Resource group name",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "d155c5eb-7cd8-4f57-b3ca-d6c32c7403e1",
      "Name": "Azure.LoadBalancerCreateHealthProbe.LoadBalancerName",
      "Label": "Load balancer name",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "79619a6d-1d28-4900-bc24-1c597c649bf4",
      "Name": "Azure.LoadBalancerCreateHealthProbe.HealthProbeName",
      "Label": "Health probe name",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "beed45f9-6c8d-424b-a072-57c0d1657437",
      "Name": "Azure.LoadBalancerCreateHealthProbe.Protocol",
      "Label": "Protocol",
      "HelpText": null,
      "DefaultValue": "tcp",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "http|http
tcp|tcp"
      },
      "Links": {}
    },
    {
      "Id": "403a32d1-17c5-4ee9-8095-25919369ded3",
      "Name": "Azure.LoadBalancerCreateHealthProbe.Path",
      "Label": "Path",
      "HelpText": null,
      "DefaultValue": "/",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "6c7d97da-264c-402d-b207-239922c547ef",
      "Name": "Azure.LoadBalancerCreateHealthProbe.Port",
      "Label": "Port",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "a5bfd24b-1249-4383-8204-336abc43a435",
      "Name": "Azure.LoadBalancerCreateHealthProbe.Interval",
      "Label": "Interval",
      "HelpText": "interval in seconds",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "033d0e37-30f9-49c8-b012-c18416596624",
      "Name": "Azure.LoadBalancerCreateHealthProbe.ProbeCount",
      "Label": "Unhealty threshold",
      "HelpText": "number of consecutive failures",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    }
  ],
  "LastModifiedBy": "prebenh",
  "$Meta": {
    "ExportedAt": "2018-05-04T12:46:43.193Z",
    "OctopusVersion": "2018.4.7",
    "Type": "ActionTemplate"
  },
  "Logo" : "",
  "Category": "azure"
}
