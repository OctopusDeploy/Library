{
    "Id": "aa113393-e615-40ed-9c5a-f95f471d728f",
    "Name": "HashiCorp Vault - AppRole Unwrap Secret ID and Login",
    "Description": "This step combines two Vault operations into one:
1. It retrieves (and unwraps) a Secret ID for an [AppRole](https://www.vaultproject.io/docs/auth/approle) using a wrapped auth token from a HashiCorp Vault server.
2. It logs into the HashiCorp Vault server using a supplied Role ID and the unwrapped Secret ID.

The `client_token` from the login response will be made available as a sensitive [Output variable](https://octopus.com/docs/projects/variables/output-variables#sensitive-output-variables) named `AppRoleAuthToken` for use in other step templates.

This step template makes use of the [Rest API](https://www.vaultproject.io/api-docs/auth/approle#login-with-approle), so no other dependencies are needed. 

---

**Required:** 
- The Vault server must be [unsealed](https://www.vaultproject.io/docs/concepts/seal).
- The full path where the AppRole auth method is mounted.
- The [RoleID](https://www.vaultproject.io/docs/auth/approle#roleid) of the AppRole.
- The wrapped [auth token](https://www.vaultproject.io/docs/auth/token) used to retrieve the unwrapped Secret ID. 

---

*Optional*
- The creation path of the wrapped token. If this parameter value is provided, the step template will perform a [wrapping lookup](https://www.vaultproject.io/api-docs/system/wrapping-lookup) to [validate no malfeasance](https://www.vaultproject.io/docs/concepts/response-wrapping#response-wrapping-token-validation) has occurred.
- A Vault [namespace](https://www.vaultproject.io/docs/enterprise/namespaces) to use. Nested namespaces can also be supplied, e.g. `ns1/ns2`. **Note:** This field is only supported on [Vault Enterprise](https://www.hashicorp.com/products/vault) .

---

Notes:


- Tested on Vault Server `1.11.3`.
- Tested on both PowerShell Desktop and PowerShell Core.
- See the HashiCorp [AppRole patterns documentation](https://learn.hashicorp.com/tutorials/vault/pattern-approle?in=vault/recommended-patterns#vault-returns-a-token) for further information.
",
    "ActionType": "Octopus.Script",
    "Version": 5,
    "CommunityActionTemplateId": null,
    "Packages": [],
    "Properties": {
      "Octopus.Action.Script.ScriptSource": "Inline",
      "Octopus.Action.Script.Syntax": "PowerShell",
      "Octopus.Action.Script.ScriptBody": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

# Variables
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.VaultAddress\"]
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.ApiVersion\"]
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.Namespace\"]
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.AppRolePath\"]
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ROLEID = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.RoleID\"]
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.WrappedToken\"]

# Optional Variables
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN_CREATION_PATH = $OctopusParameters[\"Vault.AppRole.UnwrapSecretID.Login.WrappedTokenCreationPath\"]

# Validation
if ([string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS)) {
    throw \"Required parameter VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS not specified\"
}
if ([string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION)) {
    throw \"Required parameter VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION not specified\"
}
if ([string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH)) {
    throw \"Required parameter VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH not specified\"
}
if ([string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ROLEID)) {
    throw \"Required parameter VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ROLEID not specified\"
}
if ([string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN)) {
    throw \"Required parameter VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN not specified\"
}

# Helper functions
###############################################################################
function Get-WebRequestErrorBody {
    param (
        $RequestError
    )

    # Powershell < 6 you can read the Exception
    if ($PSVersionTable.PSVersion.Major -lt 6) {
        if ($RequestError.Exception.Response) {
            $reader = New-Object System.IO.StreamReader($RequestError.Exception.Response.GetResponseStream())
            $reader.BaseStream.Position = 0
            $reader.DiscardBufferedData()
            $rawResponse = $reader.ReadToEnd()
            $response = \"\"
            try { $response = $rawResponse | ConvertFrom-Json } catch { $response = $rawResponse }
            return $response
        }
    }
    else {
        return $RequestError.ErrorDetails.Message
    }
}
###############################################################################

$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS = $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS.TrimEnd('/')
$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH = $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH.TrimStart('/').TrimEnd('/')

# Local variables
$StepName = $OctopusParameters[\"Octopus.Step.Name\"]

try {
    
    Write-Verbose \"X-Vault-Namespace header: $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE\"
    
    # Should we validate lookup token's creation path?
    if (![string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN_CREATION_PATH)) {
        $uri = \"$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS/$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION/sys/wrapping/lookup\"    
        $payload = @{
            token = $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN
        }

        $Headers = @{}
        if (-not [string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)) {
            $Headers.Add(\"X-Vault-Namespace\", $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)
        }

        Write-Verbose \"Making Post request to $uri\"
        $response = Invoke-RestMethod -Uri $uri -Method Post -Body ($payload | ConvertTo-Json -Depth 10) -Headers $Headers

        if ($null -ne $response) {
            Write-Verbose \"Validating Wrapped token creation path.\"
            $Lookup_CreationPath = $response.data.creation_path
            if ($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN_CREATION_PATH -ne $Lookup_CreationPath) {
                throw \"Supplied Wrapped token creation path failed lookup validation. Check the creation path value and retry.\"
            }
        }
        else {
            Write-Error \"Null or Empty response returned from Vault server lookup\" -Category InvalidResult
        }
    }

    # Call to unwrap secret id from wrapped token.
    $Headers = @{
        \"X-Vault-Token\" = $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_TOKEN
    }
    
    if (-not [string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)) {
        $Headers.Add(\"X-Vault-Namespace\", $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)
    }
    
    $uri = \"$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS/$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION/sys/wrapping/unwrap\"
    Write-Verbose \"Making Post request to $uri\"
    $response = Invoke-RestMethod -Uri $uri -Headers $Headers -Method Post
    
    if ($null -ne $response) {

        $payload = @{
            role_id   = $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ROLEID
            secret_id = $response.data.secret_id
        }

        $Headers = @{}
        if (-not [string]::IsNullOrWhiteSpace($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)) {
            $Headers.Add(\"X-Vault-Namespace\", $VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_NAMESPACE)
        }

        $uri = \"$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_ADDRESS/$VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_API_VERSION/$([uri]::EscapeDataString($VAULT_APPROLE_UNWRAP_SECRETID_LOGIN_APPROLE_PATH))/login\"
        Write-Verbose \"Making Post request to $uri\"
        $login_response = Invoke-RestMethod -Method Post -Uri $uri -Body ($payload | ConvertTo-Json -Depth 10) -Headers $Headers
        
        if ($null -ne $login_response) {
            Set-OctopusVariable -Name \"AppRoleAuthToken\" -Value $login_response.auth.client_token -Sensitive
            Write-Host \"Created output variable: ##{Octopus.Action[$StepName].Output.AppRoleAuthToken}\"
        }
        else {
            Write-Error \"Null or Empty response returned from Vault server\" -Category InvalidResult
        }
    }
    else {
        throw \"Null or Empty response returned from Vault server unwrap\"
    }
}
catch {
    $ExceptionMessage = $_.Exception.Message
    $ErrorBody = Get-WebRequestErrorBody -RequestError $_
    $Message = \"An error occurred unwrapping secretid: $ExceptionMessage\"
    $AdditionalDetail = \"\"
    if (![string]::IsNullOrWhiteSpace($ErrorBody)) {
        if ($null -ne $ErrorBody.errors) {
            $AdditionalDetail = $ErrorBody.errors -Join \",\"   
        }
        else {
            $errorDetails = $null
            try { $errorDetails = ConvertFrom-Json $ErrorBody } catch {}
            $AdditionalDetail += if ($null -ne $errorDetails) { $errorDetails.errors -Join \",\" } else { $ErrorBody } 
        }
    }
    
    if (![string]::IsNullOrWhiteSpace($AdditionalDetail)) {
        $Message += \"`n`tDetail: $AdditionalDetail\"
    }

    Write-Error $Message -Category ConnectionError
}"
    },
    "Parameters": [
      {
        "Id": "a0078913-4e0b-4b01-b8eb-f410138951e8",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.VaultAddress",
        "Label": "Vault Server URL",
        "HelpText": "The URL of the Vault instance you are connecting to. Port should be included (The default is `8200`). For example:


`https://myvault.local:8200/`",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "6b441222-26f8-4e68-bb96-fdabd0ebcc59",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.ApiVersion",
        "Label": "API version",
        "HelpText": "All API routes are prefixed with a version e.g. `/v1/`.

See the [API documentation](https://www.vaultproject.io/api-docs) for further details.",
        "DefaultValue": "v1",
        "DisplaySettings": {
          "Octopus.ControlType": "Select",
          "Octopus.SelectOptions": "v1|v1"
        }
      },
      {
        "Id": "f973d44c-4840-4559-9331-6b2d91c130f3",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.Namespace",
        "Label": "Namespace (Optional)",
        "HelpText": "The _optional_ [namespace](https://www.vaultproject.io/docs/enterprise/namespaces) to use. Nested namespaces can also be supplied, e.g. `ns1/ns2`.

**Note:** This field is only supported on [Vault Enterprise](https://www.hashicorp.com/products/vault) .",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "6fd4b775-5b97-43c7-bc53-5dc3e2353287",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.AppRolePath",
        "Label": "App Role Path",
        "HelpText": "The path where the approle auth method was mounted. The default path is `/auth/approle`. If the AppRole auth method was mounted at a different path, for example `my-path`, then specify `/my-path` instead.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      },
      {
        "Id": "a8c0824c-3e1a-4014-8060-96a703d52365",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.RoleID",
        "Label": "Role ID",
        "HelpText": "The [RoleID](https://www.vaultproject.io/docs/auth/approle#roleid) of the AppRole.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Sensitive"
        }
      },
      {
        "Id": "8ba05c24-215f-4ca0-9edc-bca38c43d7b5",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.WrappedToken",
        "Label": "Wrapped Token",
        "HelpText": "This is the wrapped token used to retrieve the actual Secret ID from Vault.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "Sensitive"
        }
      },
      {
        "Id": "3d94ac28-e7b6-4da2-8ff4-af506d5ded95",
        "Name": "Vault.AppRole.UnwrapSecretID.Login.WrappedTokenCreationPath",
        "Label": "Token Creation Path",
        "HelpText": "*Optional* - the creation path of the wrapped token. If this parameter value is provided, the step template will perform a [wrapping lookup](https://www.vaultproject.io/api-docs/system/wrapping-lookup) to [validate no malfeasance](https://www.vaultproject.io/docs/concepts/response-wrapping#response-wrapping-token-validation) has occurred.",
        "DefaultValue": "",
        "DisplaySettings": {
          "Octopus.ControlType": "SingleLineText"
        }
      }
    ],
    "LastModifiedAt": "2022-09-18T09:07:46.536Z",
    "LastModifiedBy": "harrisonmeister",
    "$Meta": {
      "ExportedAt": "2022-09-18T09:07:46.536Z",
      "OctopusVersion": "2022.4.2266",
      "Type": "ActionTemplate"
    },
    "Category": "hashicorp-vault"
  }
