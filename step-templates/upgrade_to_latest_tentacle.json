{
  "Id": "349c64f5-c9bd-4b55-bff7-cc497a1f898e",
  "Name": "Upgrade To Latest Tentacle",
  "Description": "Upgrades a list of machines to the latest version of Tentacle. Machines can be targeted by Environment and/or Role or Machine Name.\n\nThis needs to be run directly on a worker or the octopus server itself.",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "# Define working variables\n$OctopusUrl       = [string]$OctopusParameters['UpdateTentacles.OctopusUrl'].Trim()\n$ApiKey           = [string]$OctopusParameters['UpdateTentacles.ApiKey'].Trim()\n$SpaceName        = [string]$OctopusParameters['UpdateTentacles.SpaceName'].Trim()\n$EnvironmentNames = [string[]]$OctopusParameters['UpdateTentacles.EnvironmentNames']\n$RoleNames        = [string[]]$OctopusParameters['UpdateTentacles.RoleNames']\n$MachineNames     = [string[]]$OctopusParameters['UpdateTentacles.MachineNames']\n$WhatIf           = [bool]::Parse($OctopusParameters['UpdateTentacles.WhatIf'])\n$Wait             = [bool]::Parse($OctopusParameters['UpdateTentacles.Wait'])\n\n# Remove white space and blank lines.\nif ($null -ne $EnvironmentNames) {\n    $EnvironmentNames = $EnvironmentNames.Split(\"`n\").Trim().Where({$_}) # Trim white space and blank lines.\n}\nif ($null -ne $RoleNames) {\n    $RoleNames = $RoleNames.Split(\"`n\").Trim().Where({$_}) # Trim white space and blank lines.\n}\nif ($null -ne $MachineNames) {\n    $MachineNames = $MachineNames.Split(\"`n\").Trim().Where({$_}) # Trim white space and blank lines.\n}\n\n[Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12\n$ErrorActionPreference = \"Stop\"\n\n$header = @{ \"X-Octopus-ApiKey\" = $ApiKey }\n\nif ($null -eq $SpaceName) {\n    $baseUri = \"$OctopusUrl/api\"\n} else {\n    $space = (Invoke-RestMethod -Method Get -Uri \"$OctopusUrl/api/spaces/all\" -Headers $header) | Where-Object { $_.Name -eq $SpaceName }\n\n    if ($null -eq $space) {\n        throw \"Space Name $SpaceName does not exist.\"\n    } else {\n        Write-Verbose \"Using Space $SpaceName.\"\n    }\n\n    $baseUri = \"$OctopusUrl/api/$($space.Id)\"\n}\n\n# Start with no machines\n$allMachines = @()\n\n# Add machines for each requested environment.\nforeach ($environmentName in $EnvironmentNames) {\n    $environment = (Invoke-RestMethod -Method Get -Uri \"$baseUri/environments/all\" -Headers $header) | Where-Object { $_.Name -eq $environmentName }\n\n    if ($null -eq $environment) {\n        throw \"Environment $environmentName does not exist.\"\n    } else {\n        Write-Verbose \"Adding machines from Environment $environmentName.\"\n    }\n\n    $allMachines += (Invoke-RestMethod -Method Get -Uri \"$baseUri/environments/$($environment.Id)/machines?take=$([int32]::MaxValue)\" -Headers $header).Items\n}\n\n# If roles are specifed, include only machines in the specicied roles. Otherwise don't filter.\nif ($null -eq $RoleNames) {\n    $roleFilteredMachines += $allMachines\n} else {\n    $roleFilteredMachines = @()\n    foreach ($roleName in $RoleNames) {\n        $roleFilteredMachines += $allMachines | Where-Object { $_.Roles -contains $roleName }\n    }\n}\n\n# Add each specific machine requested.\n$roleFilteredMachines += (Invoke-RestMethod -Method Get -Uri \"$baseUri/machines/all\" -Headers $header) | Where-Object { $_.Name -in $MachineNames }\n\n# Create array of unique IDs to target.\n$uniqueIDs = [array]($roleFilteredMachines.Id | Sort-Object -Unique)\n\nif (-not $uniqueIDs) {\n    Write-Highlight \"No machines were targeted. Exiting...\"\n    exit\n}\n\n# Build json payload, targeting unique machine IDs.\n$jsonPayload = @{\n    Arguments = @{\n        MachineIds = $uniqueIDs\n    }\n    Description = \"Upgrade Tentacle version.\"\n    Name = \"Upgrade\"\n}\n\nif ($WhatIf) {\n    Write-Host \"Upgrading tentacles on:\"\n    Write-Host $(($roleFilteredMachines.Name | Sort-Object -Unique) -join \"`r\")\n} else {\n    Write-Verbose \"Upgrading tentacles on:\"\n    Write-Verbose $(($roleFilteredMachines.Name | Sort-Object -Unique) -join \"`r\")\n    $task = Invoke-RestMethod -Method Post -Uri \"$baseUri/tasks\" -Headers $header -Body ($jsonPayload | ConvertTo-Json -Depth 10)\n    Write-Highlight \"$($task.Id) started. Progress can be monitored [here]($OctopusUrl$($task.Links.Web)?activeTab=taskLog)\"\n    \n    if ($Wait) {\n        do {\n        \t# Output the current state of the task every five seconds.\n            $task = Invoke-RestMethod -Method Get -Uri \"$baseUri/tasks/$($task.Id)\" -Headers $header\n            $task\n            Start-Sleep -Seconds 5\n        } while ($task.IsCompleted -eq $false)\n    }\n}"
  },
  "Parameters": [
    {
      "Id": "51ea8dde-8df6-4621-8c8a-f5cacf485c5e",
      "Name": "UpdateTentacles.OctopusUrl",
      "Label": "Octopus Url",
      "HelpText": "**Required**\n\nThe url of the server where the upgrades will be performed.\n\ne.g. `https://octopus.server.com`",
      "DefaultValue": "#{Octopus.Web.ServerUri}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "b8d147e0-de55-488e-a69f-9b212fd99559",
      "Name": "UpdateTentacles.ApiKey",
      "Label": "API Key",
      "HelpText": "**Required**\n\nThe api key of a user permitted to perform tentacle upgrades.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "e0d7450e-01de-47b2-abd2-3b22aa12a295",
      "Name": "UpdateTentacles.SpaceName",
      "Label": "Space",
      "HelpText": "The space to use when targeting machines.",
      "DefaultValue": "#{Octopus.Space.Name}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "fb2c3110-d597-4729-9c86-d6dc5314dfb7",
      "Name": "UpdateTentacles.EnvironmentNames",
      "Label": "Environments",
      "HelpText": "A list of environments to be used for targeting machines. If no environments are specified, only `Machines Names` will be targeted.\n\nMultiple environments can be specified, one per line.",
      "DefaultValue": "#{Octopus.Environment.Name}",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "2ec7ff8e-6dd3-46a8-9ef6-5869d14b6a03",
      "Name": "UpdateTentacles.RoleNames",
      "Label": "Roles",
      "HelpText": "A list of roles to filter the machines found in the specified `Environments`. Only machines that are members of a specified role will be targeted.\n\nMultiple roles can be specified, one per line.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "e68ee3f0-bf4b-47ce-bba2-9a2e50c80595",
      "Name": "UpdateTentacles.MachineNames",
      "Label": "Machine Names",
      "HelpText": "Additional machine names to upgrade. These will be added to the list after `Environments` and `Roles` have been processed.\n\nMultiple machines can be specified, one per line.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "9e742501-e215-4217-8e32-a6fb5ac16b6d",
      "Name": "UpdateTentacles.WhatIf",
      "Label": "What If",
      "HelpText": "This can be used to test the targeting parameters. When selected, a list of target machines will be listed, but no machines will be upgraded.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "8e3f8d65-c117-40b6-b654-93f8ab65776d",
      "Name": "UpdateTentacles.Wait",
      "Label": "Wait",
      "HelpText": "Wait until the upgrade is finished.",
      "DefaultValue": "True",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    }
  ],
  "StepPackageId": "Octopus.Script",
  "$Meta": {
    "ExportedAt": "2023-11-21T00:42:08.257Z",
    "OctopusVersion": "2023.2.13113",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "REOScotte",
  "Category": "octopus"
}
