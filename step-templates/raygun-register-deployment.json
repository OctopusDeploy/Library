{
  "Id": "38dc63ed-0c93-4440-93aa-54d8cf6c29ff",
  "Name": "Raygun - Register Deployment",
  "Description": "Notifies [Raygun](https://raygun.com) of a deployment using [Deployments API](https://raygun.com/docs/deployments/octopus-deploy).\nSends the release number, deployer, release notes from the Octopus deployment.",
  "ActionType": "Octopus.Script",
  "Version": 10,
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "Function Get-Parameter($Name, [switch]$Required, $Default, [switch]$FailOnValidate) {\n    $result = $null\n    $errMessage = [string]::Empty\n\n    If ($OctopusParameters -ne $null) {\n        $result = $OctopusParameters[$Name]\n        Write-Host \"Octopus paramter value for $Name : $result\"\n    }\n\n    If ($result -eq $null) {\n        $variable = Get-Variable $Name -EA SilentlyContinue\n        if ($variable -ne $null) {\n            $result = $variable.Value\n        }\n    }\n\n    If ($result -eq $null) {\n        If ($Required) {\n            $errMessage = \"Missing parameter value $Name\"\n        } Else {\n            $result = $Default\n        }\n    } \n\n    If (-Not [string]::IsNullOrEmpty($errMessage)) {\n        If ($FailOnValidate) {\n            Throw $errMessage\n        } Else {\n            Write-Warning $errMessage\n        }\n    }\n\n    return $result\n}\n\n& {\n    Write-Host \"Start AddInRaygun\"\n\n    $deploymentId = [string] (Get-Parameter \"Octopus.Release.Number\" $true [string]::Empty $true)\n    $ownerName = [string] (Get-Parameter \"Octopus.Deployment.CreatedBy.DisplayName\" $true [string]::Empty $true)\n    $emailAddress = [string] (Get-Parameter \"Octopus.Deployment.CreatedBy.EmailAddress\" $false [string]::Empty $true)\n    $comment = [string] (Get-Parameter \"Octopus.Release.Notes\" $false [string]::Empty $true)\n    $apiKey = [string] (Get-Parameter \"Raygun.ApiKey\" $true [string]::Empty $true)\n    $authToken = [string] (Get-Parameter \"Raygun.AuthToken\" $true [string]::Empty $true)\n\n    $command = ConvertTo-Json @{\n        apiKey = $apiKey\n        version = $deploymentId\n        ownerName = $ownerName\n        emailAddress = $emailAddress\n        comment = $comment\n    }\n\n    $url = \"https://app.raygun.io/deployments?authToken=\" + $authToken\n    try {\n        Invoke-RestMethod -Uri $url -Body $command -Method Post -ContentType \"application/json\"\n        Write-Host \"Added deployment in Raygun\"\n    } catch {\n        Write-Host \"Error occured when adding deployment in Raygun: \" $_\n    }\n\n    Write-Host \"End AddInRaygun\"\n}",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.NuGetFeedId": null,
    "Octopus.Action.Package.NuGetPackageId": null
  },
  "Parameters": [
    {
      "Name": "Raygun.ApiKey",
      "Label": "Api Key",
      "HelpText": "Raygun Application's ApiKey (the same one you use to set Raygun up within your app)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Name": "Raygun.AuthToken",
      "Label": "Auth Token",
      "HelpText": "External Auth Token for your build server to use from your [Raygun User Settings page](https://app.raygun.io/user).",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedBy": "sarbis",
  "$Meta": {
    "ExportedAt": "2016-08-27T20:49:23.367+00:00",
    "OctopusVersion": "3.3.16",
    "Type": "ActionTemplate"
  },
  "Category": "raygun"
}